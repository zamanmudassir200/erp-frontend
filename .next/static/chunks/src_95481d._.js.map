{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ERP/erp_frontend/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ERP/erp_frontend/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\r\n        outline:\r\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-10 px-4 py-2\",\r\n        sm: \"h-9 rounded-md px-3\",\r\n        lg: \"h-11 rounded-md px-8\",\r\n        icon: \"h-10 w-10\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\"\r\n    return (\r\n      <Comp\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,8JAAM,UAAU,MAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ERP/erp_frontend/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,8JAAM,UAAU,MAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ERP/erp_frontend/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst labelVariants = cva(\r\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\r\n)\r\n\r\nconst Label = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\r\n    VariantProps<typeof labelVariants>\r\n>(({ className, ...props }, ref) => (\r\n  <LabelPrimitive.Root\r\n    ref={ref}\r\n    className={cn(labelVariants(), className)}\r\n    {...props}\r\n  />\r\n))\r\nLabel.displayName = LabelPrimitive.Root.displayName\r\n\r\nexport { Label }\r\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAEA;AAHA;AAHA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,8JAAM,UAAU,MAI5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAe,IAAI;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,qKAAe,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 168, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ERP/erp_frontend/src/apiURL.ts"],"sourcesContent":["// export const url = \"https://erp-woad-pi.vercel.app/v1\";\r\nexport const url = \"http://localhost:3000/v1\";\r\n"],"names":[],"mappings":"AAAA,0DAA0D;;;;AACnD,MAAM,MAAM"}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ERP/erp_frontend/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\r\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Select = SelectPrimitive.Root\r\n\r\nconst SelectGroup = SelectPrimitive.Group\r\n\r\nconst SelectValue = SelectPrimitive.Value\r\n\r\nconst SelectTrigger = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <SelectPrimitive.Icon asChild>\r\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\r\n    </SelectPrimitive.Icon>\r\n  </SelectPrimitive.Trigger>\r\n))\r\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\r\n\r\nconst SelectScrollUpButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollUpButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronUp className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollUpButton>\r\n))\r\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\r\n\r\nconst SelectScrollDownButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollDownButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronDown className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollDownButton>\r\n))\r\nSelectScrollDownButton.displayName =\r\n  SelectPrimitive.ScrollDownButton.displayName\r\n\r\nconst SelectContent = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\r\n>(({ className, children, position = \"popper\", ...props }, ref) => (\r\n  <SelectPrimitive.Portal>\r\n    <SelectPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        position === \"popper\" &&\r\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\r\n        className\r\n      )}\r\n      position={position}\r\n      {...props}\r\n    >\r\n      <SelectScrollUpButton />\r\n      <SelectPrimitive.Viewport\r\n        className={cn(\r\n          \"p-1\",\r\n          position === \"popper\" &&\r\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\r\n        )}\r\n      >\r\n        {children}\r\n      </SelectPrimitive.Viewport>\r\n      <SelectScrollDownButton />\r\n    </SelectPrimitive.Content>\r\n  </SelectPrimitive.Portal>\r\n))\r\nSelectContent.displayName = SelectPrimitive.Content.displayName\r\n\r\nconst SelectLabel = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Label>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Label\r\n    ref={ref}\r\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectLabel.displayName = SelectPrimitive.Label.displayName\r\n\r\nconst SelectItem = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <SelectPrimitive.ItemIndicator>\r\n        <Check className=\"h-4 w-4\" />\r\n      </SelectPrimitive.ItemIndicator>\r\n    </span>\r\n\r\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\r\n  </SelectPrimitive.Item>\r\n))\r\nSelectItem.displayName = SelectPrimitive.Item.displayName\r\n\r\nconst SelectSeparator = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Separator>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\r\n\r\nexport {\r\n  Select,\r\n  SelectGroup,\r\n  SelectValue,\r\n  SelectTrigger,\r\n  SelectContent,\r\n  SelectLabel,\r\n  SelectItem,\r\n  SelectSeparator,\r\n  SelectScrollUpButton,\r\n  SelectScrollDownButton,\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 391, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 397, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ERP/erp_frontend/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,8JAAM,UAAU,MAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,8JAAM,UAAU,OAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,8JAAM,UAAU,OAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,8JAAM,UAAU,OAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,8JAAM,UAAU,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 494, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 500, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ERP/erp_frontend/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Table = React.forwardRef<\r\n  HTMLTableElement,\r\n  React.HTMLAttributes<HTMLTableElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div className=\"relative w-full overflow-auto\">\r\n    <table\r\n      ref={ref}\r\n      className={cn(\"w-full caption-bottom text-sm\", className)}\r\n      {...props}\r\n    />\r\n  </div>\r\n))\r\nTable.displayName = \"Table\"\r\n\r\nconst TableHeader = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\r\n))\r\nTableHeader.displayName = \"TableHeader\"\r\n\r\nconst TableBody = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tbody\r\n    ref={ref}\r\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableBody.displayName = \"TableBody\"\r\n\r\nconst TableFooter = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tfoot\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableFooter.displayName = \"TableFooter\"\r\n\r\nconst TableRow = React.forwardRef<\r\n  HTMLTableRowElement,\r\n  React.HTMLAttributes<HTMLTableRowElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tr\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableRow.displayName = \"TableRow\"\r\n\r\nconst TableHead = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.ThHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <th\r\n    ref={ref}\r\n    className={cn(\r\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableHead.displayName = \"TableHead\"\r\n\r\nconst TableCell = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.TdHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <td\r\n    ref={ref}\r\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableCell.displayName = \"TableCell\"\r\n\r\nconst TableCaption = React.forwardRef<\r\n  HTMLTableCaptionElement,\r\n  React.HTMLAttributes<HTMLTableCaptionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <caption\r\n    ref={ref}\r\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableCaption.displayName = \"TableCaption\"\r\n\r\nexport {\r\n  Table,\r\n  TableHeader,\r\n  TableBody,\r\n  TableFooter,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableCaption,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,8JAAM,UAAU,MAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,8JAAM,UAAU,OAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,8JAAM,UAAU,OAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,8JAAM,UAAU,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,8JAAM,UAAU,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,8JAAM,UAAU,QAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;;AAGb,aAAa,WAAW,GAAG"}},
    {"offset": {"line": 632, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 638, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ERP/erp_frontend/src/store/Zustand_Store.tsx"],"sourcesContent":["import {create} from 'zustand';\r\nimport axios from 'axios';\r\nimport { url } from '@/apiURL';\r\n\r\nconst useStore = create<any>((set : any , get: any) => ({\r\n  payment_loading : false,\r\n  client_secret : \"\", // initial state\r\n  form_data :  null ,\r\n  installment_amount : null,\r\n  client_container_installment_id : \"\",\r\n  client_container_id : \"\",\r\n  set_payment_loading : (loading : any) => set(() => ({ payment_loading : loading })),  // Loading state for payment process\r\n  set_client_secret : (client_id : any) => set(() => ({ client_secret : client_id })),\r\n  set_installment_amount : (amount : any) => set(() => ({installment_amount : amount})), \r\n  save_form_data : (data : any) => set(() => ({form_data : data})),\r\n  set_client_container_installment_id : (id : any) => set(() => ({ client_container_installment_id : id})),\r\n  set_client_container_id  : (id : any) => set(() => ({ client_container_id : id})),\r\n  post_container_booking : async() => {\r\n   try {\r\n        const form_data = get().form_data;\r\n        console.log(form_data);\r\n      const post_data = await axios.post(`${url}/container/booked_container` , form_data , {\r\n        headers : {\r\n          token : localStorage.getItem('token')\r\n        }\r\n      });\r\n      if(post_data.status === 200) {\r\n        console.log(post_data);\r\n      }\r\n   } catch (error) {\r\n      console.log(error);\r\n   }\r\n  },\r\n  update_installment_payment : async() => {\r\n    const { client_container_installment_id, installment_amount , client_container_id } = get();\r\n    try {\r\n      const response = await axios.post(\"http://localhost:3000/v1/container/update_client_container_installment\", {\r\n        containerId : client_container_id,\r\n        installmentId : client_container_installment_id,\r\n        amount : installment_amount,\r\n      });\r\n      console.log(response);\r\n      return response.data;\r\n    } catch (error) {\r\n       console.log(error);\r\n    }\r\n  }\r\n}));\r\n\r\nexport default useStore;"],"names":[],"mappings":";;;AAEA;AAFA;AACA;;;;AAGA,MAAM,WAAW,CAAA,GAAA,2IAAA,CAAA,SAAM,AAAD,EAAO,CAAC,KAAY,MAAa,CAAC;QACtD,iBAAkB;QAClB,eAAgB;QAChB,WAAa;QACb,oBAAqB;QACrB,iCAAkC;QAClC,qBAAsB;QACtB,qBAAsB,CAAC,UAAkB,IAAI,IAAM,CAAC;oBAAE,iBAAkB;gBAAQ,CAAC;QACjF,mBAAoB,CAAC,YAAoB,IAAI,IAAM,CAAC;oBAAE,eAAgB;gBAAU,CAAC;QACjF,wBAAyB,CAAC,SAAiB,IAAI,IAAM,CAAC;oBAAC,oBAAqB;gBAAM,CAAC;QACnF,gBAAiB,CAAC,OAAe,IAAI,IAAM,CAAC;oBAAC,WAAY;gBAAI,CAAC;QAC9D,qCAAsC,CAAC,KAAa,IAAI,IAAM,CAAC;oBAAE,iCAAkC;gBAAE,CAAC;QACtG,yBAA2B,CAAC,KAAa,IAAI,IAAM,CAAC;oBAAE,qBAAsB;gBAAE,CAAC;QAC/E,wBAAyB;YACxB,IAAI;gBACC,MAAM,YAAY,MAAM,SAAS;gBACjC,QAAQ,GAAG,CAAC;gBACd,MAAM,YAAY,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,gHAAA,CAAA,MAAG,CAAC,2BAA2B,CAAC,EAAG,WAAY;oBACnF,SAAU;wBACR,OAAQ,aAAa,OAAO,CAAC;oBAC/B;gBACF;gBACA,IAAG,UAAU,MAAM,KAAK,KAAK;oBAC3B,QAAQ,GAAG,CAAC;gBACd;YACH,EAAE,OAAO,OAAO;gBACb,QAAQ,GAAG,CAAC;YACf;QACD;QACA,4BAA6B;YAC3B,MAAM,EAAE,+BAA+B,EAAE,kBAAkB,EAAG,mBAAmB,EAAE,GAAG;YACtF,IAAI;gBACF,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,0EAA0E;oBAC1G,aAAc;oBACd,eAAgB;oBAChB,QAAS;gBACX;gBACA,QAAQ,GAAG,CAAC;gBACZ,OAAO,SAAS,IAAI;YACtB,EAAE,OAAO,OAAO;gBACb,QAAQ,GAAG,CAAC;YACf;QACF;IACF,CAAC;uCAEc"}},
    {"offset": {"line": 707, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 713, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ERP/erp_frontend/src/components/Container-Book/Container_Book.tsx"],"sourcesContent":["// \"use client\";\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { useForm } from \"react-hook-form\";\r\n// import { Input } from \"@/components/ui/input\";\r\n// import { Label } from \"@/components/ui/label\";\r\n// import { url } from \"@/apiURL\";\r\n// import { Button } from \"@/components/ui/button\";\r\n// import { useRouter } from \"next/navigation\";\r\n// import { toast } from \"react-toastify\";\r\n// import { Loader2 } from \"lucide-react\";\r\n// import {\r\n//   Select,\r\n//   SelectItem,\r\n//   SelectTrigger,\r\n//   SelectContent,\r\n//   SelectValue,\r\n// } from \"@/components/ui/select\";\r\n// import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\n// import axios from \"axios\";\r\n// import {\r\n//   Table,\r\n//   TableBody,\r\n//   TableCell,\r\n//   TableFooter,\r\n//   TableHead,\r\n//   TableHeader,\r\n//   TableRow,\r\n// } from \"@/components/ui/table\";\r\n// import useStore from \"@/store/Zustand_Store\";\r\n// // Define the form data type\r\n// type FormValues = {\r\n//   container_type: string;\r\n//   weight: number;\r\n//   containers: { size: string; quantity: number }[];\r\n//   price: number;\r\n//   handling_type: string;\r\n//   installments: any;\r\n//   installmentDetails: { installment_number: any; amount: any; status: any }[];\r\n//   receiver_details: {\r\n//     name: string;\r\n//     address: string;\r\n//     phone: string;\r\n//   };\r\n// };\r\n\r\n// const Container_Book = () => {\r\n//   const set_client_secret = useStore((state) => state.set_client_secret);\r\n//   const save_form_data = useStore((state) => state.save_form_data);\r\n//   const payment_loading = useStore((state) => state.payment_loading);\r\n//   const set_payment_loading = useStore((state) => state.set_payment_loading);\r\n//   const set_installment_amount = useStore(\r\n//     (state) => state.set_installment_amount\r\n//   );\r\n\r\n//   const router = useRouter();\r\n\r\n//   const {\r\n//     register,\r\n//     handleSubmit,\r\n//     formState: { errors },\r\n//     reset,\r\n//     setValue,\r\n//     watch,\r\n//   } = useForm<FormValues>();\r\n\r\n//   const weight = watch(\"weight\"); // Watch the weight field for changes\r\n//   const price = watch(\"price\"); // Watch price field dynamically\r\n//   const installments: any = watch(\"installments\"); // Watch installments value\r\n\r\n//   useEffect(() => {\r\n//     if (weight) {\r\n//       const containerDetails: { size: string; quantity: number }[] = [];\r\n//       let remainingWeight = weight; // User input ka weight\r\n//       let totalPrice = 0;\r\n\r\n//       // Container prices\r\n//       const price20 = 1000; // Price of 20 feet container\r\n//       const price40 = 2000; // Price of 40 feet container\r\n\r\n//       // Step 1: Use 40-feet containers for maximum capacity\r\n//       if (remainingWeight >= 4) {\r\n//         const quantity40 = Math.floor(remainingWeight / 4); // 40-feet containers required\r\n//         containerDetails.push({ size: \"40 feet\", quantity: quantity40 });\r\n//         totalPrice += quantity40 * price40; // Update price\r\n//         remainingWeight -= quantity40 * 4; // Subtract weight handled by 40-feet containers\r\n//       }\r\n\r\n//       // Step 2: Use 20-feet containers for remaining weight\r\n//       if (remainingWeight > 0) {\r\n//         const quantity20 = Math.ceil(remainingWeight / 2); // 20-feet containers required\r\n//         containerDetails.push({ size: \"20 feet\", quantity: quantity20 });\r\n//         totalPrice += quantity20 * price20; // Update price\r\n//         remainingWeight -= quantity20 * 2; // Subtract weight handled by 20-feet containers\r\n//       }\r\n\r\n//       // Step 3: Installments Calculation\r\n//       const installmentDetails: {\r\n//         installment_number: any;\r\n//         amount: any;\r\n//         status: any;\r\n//       }[] = [];\r\n//       for (let i = 1; i <= installments; i++) {\r\n//         installmentDetails.push({\r\n//           installment_number: i,\r\n//           amount: parseFloat((totalPrice / installments).toFixed(2)), // Divide equally and round to 2 decimal places\r\n//           status: i === 1 ? \"paid\" : \"pending\",\r\n//         });\r\n//       }\r\n\r\n//       setValue(\"installmentDetails\", installmentDetails);\r\n//       // Step 3: Update form fields\r\n//       setValue(\"containers\", containerDetails);\r\n//       setValue(\"price\", totalPrice);\r\n//     } else {\r\n//       setValue(\"containers\", []);\r\n//       setValue(\"price\", 0);\r\n//       setValue(\"installmentDetails\", []);\r\n//     }\r\n//   }, [weight, setValue, installments]);\r\n\r\n//   const client_verify = async () => {\r\n//     set_installment_amount(watch(\"installmentDetails\")?.[0].amount);\r\n//     try {\r\n//       const client_id = await axios.post(`${url}/container/payment_container`, {\r\n//         down_payment: watch(\"installmentDetails\")?.[0].amount,\r\n//       });\r\n//       if (client_id.status === 200) {\r\n//         console.log(client_id);\r\n//         set_client_secret(client_id.data.data);\r\n//         // toast({\r\n//         //   title: \"Container  Booking Saved\",\r\n//         //   description: `${new Date().toLocaleDateString()}`,\r\n//         // });\r\n//         toast.success(\r\n//           `Container Booking Saved on ${new Date().toLocaleDateString()}`\r\n//         );\r\n//         router.push(\"/payment\");\r\n//       }\r\n//     } catch (error) {\r\n//       console.log(error);\r\n   \r\n//       toast.info(\r\n//         ` Client ID : Generated \\n ${new Date().toLocaleDateString()}`\r\n//       );\r\n//     }\r\n//   };\r\n\r\n//   const onsubmit = (data: any) => {\r\n//     set_payment_loading(true);\r\n//     console.log(data);\r\n//     save_form_data(data);\r\n//     client_verify();\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <div className=\"max-w-lg mx-auto mt-10\">\r\n//         <Card>\r\n//           <CardHeader>\r\n//             <CardTitle>Container Booking Form</CardTitle>\r\n//           </CardHeader>\r\n//           <CardContent>\r\n//             <form className=\"space-y-4\" onSubmit={handleSubmit(onsubmit)}>\r\n//               {/* Container Type */}\r\n//               <div>\r\n//                 <Label htmlFor=\"container_type\">Container Type</Label>\r\n//                 <Select\r\n//                   onValueChange={(value) => setValue(\"container_type\", value)}\r\n//                 >\r\n//                   <SelectTrigger>\r\n//                     <SelectValue placeholder=\"Select Container Type\" />\r\n//                   </SelectTrigger>\r\n//                   <SelectContent>\r\n//                     <SelectItem value=\"Refrigerated\">Refrigerated</SelectItem>\r\n//                     <SelectItem value=\"Dry\">Dry</SelectItem>\r\n//                   </SelectContent>\r\n//                 </Select>\r\n//               </div>\r\n\r\n//               {/* Weight */}\r\n//               <div>\r\n//                 <Label htmlFor=\"weight\">Weight (tons)</Label>\r\n//                 <Input\r\n//                   id=\"weight\"\r\n//                   type=\"number\"\r\n//                   step=\"0.1\"\r\n//                   placeholder=\"Enter weight\"\r\n//                   {...register(\"weight\", {\r\n//                     required: \"Weight is required\",\r\n//                     min: {\r\n//                       value: 0.1,\r\n//                       message: \"Weight must be at least 0.1 tons\",\r\n//                     },\r\n//                   })}\r\n//                 />\r\n//                 {errors.weight && (\r\n//                   <p className=\"text-red-500 text-sm\">\r\n//                     {errors.weight.message}\r\n//                   </p>\r\n//                 )}\r\n//               </div>\r\n\r\n//               {/* Containers */}\r\n//               <div>\r\n//                 <div className=\"space-y-2\">\r\n//                   <Table>\r\n//                     <TableHeader>\r\n//                       <TableRow>\r\n//                         <TableHead className=\"\">Size</TableHead>\r\n//                         <TableHead>Quantity</TableHead>\r\n//                         <TableHead className=\"text-left\">Price</TableHead>\r\n//                       </TableRow>\r\n//                     </TableHeader>\r\n//                     <TableBody>\r\n//                       {watch(\"containers\")?.map((container, index) => (\r\n//                         <TableRow key={index}>\r\n//                           <TableCell className=\"font-medium\">\r\n//                             {container.size}\r\n//                           </TableCell>\r\n//                           <TableCell>{container.quantity}</TableCell>\r\n//                           <TableCell>\r\n//                             {container.size === \"20 feet\"\r\n//                               ? container.quantity * 1000\r\n//                               : container.quantity * 2000}\r\n//                             $\r\n//                           </TableCell>\r\n//                         </TableRow>\r\n//                       ))}\r\n//                     </TableBody>\r\n//                     <TableFooter>\r\n//                       <TableRow>\r\n//                         <TableCell colSpan={3}>Total</TableCell>\r\n//                         <TableCell className=\"text-right\">\r\n//                           {\" \"}\r\n//                           {watch(\"containers\")?.reduce(\r\n//                             (total, container) =>\r\n//                               total +\r\n//                               (container.size === \"20 feet\"\r\n//                                 ? container.quantity * 1000\r\n//                                 : container.quantity * 2000),\r\n//                             0\r\n//                           )}\r\n//                           $\r\n//                         </TableCell>\r\n//                       </TableRow>\r\n//                     </TableFooter>\r\n//                   </Table>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Price*/}\r\n//               <div>\r\n//                 <Label htmlFor=\"price\">Price (USD)</Label>\r\n//                 <Input\r\n//                   readOnly\r\n//                   id=\"price\"\r\n//                   type=\"number\"\r\n//                   placeholder=\"Enter weight\"\r\n//                   {...register(\"price\")}\r\n//                 />\r\n//               </div>\r\n\r\n//               <div>\r\n//                 <Label htmlFor=\"handling_type\">Handling Type</Label>\r\n//                 <Select\r\n//                   onValueChange={(value) => setValue(\"handling_type\", value)}\r\n//                 >\r\n//                   <SelectTrigger>\r\n//                     <SelectValue placeholder=\"Select Handling Type\" />\r\n//                   </SelectTrigger>\r\n//                   <SelectContent>\r\n//                     <SelectItem value=\"Employee\">\r\n//                       Employee (Material Checked)\r\n//                     </SelectItem>\r\n//                     <SelectItem value=\"Anonymous\">\r\n//                       Anonymous (No Guarantee)\r\n//                     </SelectItem>\r\n//                   </SelectContent>\r\n//                 </Select>\r\n//                 {errors.handling_type && (\r\n//                   <p className=\"text-red-500 text-sm\">\r\n//                     {errors.handling_type.message}\r\n//                   </p>\r\n//                 )}\r\n//               </div>\r\n\r\n//               <div>\r\n//                 <Label htmlFor=\"installments\">Installments</Label>\r\n//                 <Select\r\n//                   onValueChange={(value) =>\r\n//                     setValue(\"installments\", parseInt(value))\r\n//                   }\r\n//                 >\r\n//                   <SelectTrigger>\r\n//                     <SelectValue placeholder=\"Select Installments\" />\r\n//                   </SelectTrigger>\r\n//                   <SelectContent>\r\n//                     <SelectItem value=\"1\">Full Payment</SelectItem>\r\n//                     <SelectItem value=\"2\">2 Installments</SelectItem>\r\n//                   </SelectContent>\r\n//                 </Select>\r\n//               </div>\r\n\r\n//               <div>\r\n//                 <div>\r\n//                   <div className=\"space-y-2\">\r\n//                     <Table>\r\n//                       <TableHeader>\r\n//                         <TableRow>\r\n//                           <TableHead>Installement</TableHead>\r\n//                           <TableHead>Amount</TableHead>\r\n//                         </TableRow>\r\n//                       </TableHeader>\r\n//                       <TableBody>\r\n//                         {watch(\"installmentDetails\")?.map((e: any) => {\r\n//                           return (\r\n//                             <>\r\n//                               <TableRow key={e.installment_number}>\r\n//                                 <TableCell className=\"font-medium\">\r\n//                                   {e.installment_number}\r\n//                                 </TableCell>\r\n//                                 <TableCell>{e.amount}$</TableCell>\r\n//                               </TableRow>\r\n//                             </>\r\n//                           );\r\n//                         })}\r\n//                       </TableBody>\r\n//                     </Table>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               {/* Receiver Details */}\r\n//               <h3 className=\"text-lg font-medium\">Receiver Details</h3>\r\n//               <div>\r\n//                 <Label htmlFor=\"receiver_name\">Receiver Name</Label>\r\n//                 <Input\r\n//                   id=\"receiver_name\"\r\n//                   type=\"text\"\r\n//                   placeholder=\"Receiver's Name\"\r\n//                   {...register(\"receiver_details.name\", {\r\n//                     required: \"Receiver name is required\",\r\n//                   })}\r\n//                 />\r\n//                 {errors.receiver_details?.name && (\r\n//                   <p className=\"text-red-500 text-sm\">\r\n//                     {errors.receiver_details.name.message}\r\n//                   </p>\r\n//                 )}\r\n//               </div>\r\n\r\n//               <div>\r\n//                 <Label htmlFor=\"receiver_address\">Receiver Address</Label>\r\n//                 <Input\r\n//                   id=\"receiver_address\"\r\n//                   type=\"text\"\r\n//                   placeholder=\"Receiver's Address\"\r\n//                   {...register(\"receiver_details.address\", {\r\n//                     required: \"Receiver address is required\",\r\n//                   })}\r\n//                 />\r\n//                 {errors.receiver_details?.address && (\r\n//                   <p className=\"text-red-500 text-sm\">\r\n//                     {errors.receiver_details.address.message}\r\n//                   </p>\r\n//                 )}\r\n//               </div>\r\n\r\n//               <div>\r\n//                 <Label htmlFor=\"receiver_phone\">Receiver Phone</Label>\r\n//                 <Input\r\n//                   id=\"receiver_phone\"\r\n//                   type=\"tel\"\r\n//                   placeholder=\"Receiver's Phone\"\r\n//                   {...register(\"receiver_details.phone\", {\r\n//                     required: \"Receiver phone is required\",\r\n//                     pattern: {\r\n//                       value: /^[0-9]{10}$/,\r\n//                       message: \"Enter a valid 10-digit phone number\",\r\n//                     },\r\n//                   })}\r\n//                 />\r\n//                 {errors.receiver_details?.phone && (\r\n//                   <p className=\"text-red-500 text-sm\">\r\n//                     {errors.receiver_details.phone.message}\r\n//                   </p>\r\n//                 )}\r\n//               </div>\r\n\r\n//               {/* Submit Button */}\r\n//               {payment_loading ? (\r\n//                 <Button disabled className=\"w-full\">\r\n//                   <Loader2 className=\"animate-spin\" />\r\n//                   Please wait\r\n//                 </Button>\r\n//               ) : (\r\n//                 <Button type=\"submit\" className=\"w-full\">\r\n//                   Payment Method\r\n//                 </Button>\r\n//               )}\r\n//             </form>\r\n//           </CardContent>\r\n//         </Card>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default Container_Book;\r\n\r\n\r\n\r\n\r\n\"use client\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { url } from \"@/apiURL\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Loader2 } from \"lucide-react\";\r\nimport {\r\n  Select,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectContent,\r\n  SelectValue,\r\n} from \"@/components/ui/select\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableFooter,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"@/components/ui/table\";\r\nimport useStore from \"@/store/Zustand_Store\";\r\n// Define the form data type\r\ntype FormValues = {\r\n  container_type: string;\r\n  weight: number;\r\n  containers: { size: string; quantity: number }[];\r\n  price: number;\r\n  handling_type: string;\r\n  installments: any;\r\n  installment_period : any ;\r\n  installmentDetails: { installment_number: any; amount: any; status: any }[];\r\n  receiver_details: {\r\n    name: string;\r\n    address: string;\r\n    country_code : string;\r\n    phone: string;\r\n  };\r\n};\r\n\r\n\r\nconst Container_Book = () => {\r\n   \r\n\r\n  const [codes, setCodes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchCountryCodes() {\r\n      const response = await fetch(\"https://restcountries.com/v3.1/all\");\r\n      const countries = await response.json();\r\n      const countryData = countries.map((country : any) => ({\r\n        name: country.name.common,\r\n        code: country.cca2,\r\n        callingCode: country.idd.root + (country.idd.suffixes ? country.idd.suffixes[0] : \"\"),\r\n      }));\r\n      setCodes(countryData);\r\n    }\r\n\r\n    fetchCountryCodes();\r\n  }, []);\r\n\r\n  const set_client_secret = useStore((state) => state.set_client_secret);\r\n  const save_form_data = useStore((state) => state.save_form_data);\r\n  const payment_loading = useStore((state) => state.payment_loading);\r\n  const set_payment_loading = useStore((state) => state.set_payment_loading);\r\n  const set_installment_amount = useStore(\r\n    (state) => state.set_installment_amount\r\n  );\r\n\r\n  const router = useRouter();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n    setValue,\r\n    watch,\r\n  } = useForm<FormValues>();\r\n\r\n  const weight = watch(\"weight\"); // Watch the weight field for changes\r\n  const price = watch(\"price\"); // Watch price field dynamically\r\n  const installments: any = watch(\"installments\"); // Watch installments value\r\n  const installment_period: any = watch(\"installment_period\"); // Watch installment_period value\r\n  console.log(installment_period);\r\n\r\n  useEffect(() => {\r\n    if (weight) {\r\n      const containerDetails: { size: string; quantity: number }[] = [];\r\n      let remainingWeight = weight; // User input ka weight\r\n      let totalPrice = 0;\r\n\r\n      // Container prices\r\n      const price20 = 1000; // Price of 20 feet container\r\n      const price40 = 2000; // Price of 40 feet container\r\n\r\n      // Step 1: Use 40-feet containers for maximum capacity\r\n      if (remainingWeight >= 4) {\r\n        const quantity40 = Math.floor(remainingWeight / 4); // 40-feet containers required\r\n        containerDetails.push({ size: \"40 feet\", quantity: quantity40 });\r\n        totalPrice += quantity40 * price40; // Update price\r\n        remainingWeight -= quantity40 * 4; // Subtract weight handled by 40-feet containers\r\n      }\r\n\r\n      // Step 2: Use 20-feet containers for remaining weight\r\n      if (remainingWeight > 0) {\r\n        const quantity20 = Math.ceil(remainingWeight / 2); // 20-feet containers required\r\n        containerDetails.push({ size: \"20 feet\", quantity: quantity20 });\r\n        totalPrice += quantity20 * price20; // Update price\r\n        remainingWeight -= quantity20 * 2; // Subtract weight handled by 20-feet containers\r\n      }\r\n\r\n      // Step 3: Installments Calculation\r\n      const installmentDetails: {\r\n        installment_number: any;\r\n        amount: any;\r\n        status: any;\r\n      }[] = [];\r\n      for (let i = 1; i <= installment_period; i++) {\r\n        installmentDetails.push({\r\n          installment_number: i,\r\n          amount: parseFloat((totalPrice / installment_period).toFixed(2)), // Divide equally and round to 2 decimal places\r\n          status: i === 1 ? \"paid\" : \"pending\",\r\n        });\r\n      }\r\n\r\n      setValue(\"installmentDetails\", installmentDetails);\r\n      // Step 3: Update form fields\r\n      setValue(\"containers\", containerDetails);\r\n      setValue(\"price\", totalPrice);\r\n    } else {\r\n      setValue(\"containers\", []);\r\n      setValue(\"price\", 0);\r\n      setValue(\"installmentDetails\", []);\r\n    }\r\n  }, [weight, setValue, installment_period]);\r\n\r\n  useEffect(() => {\r\n    if (installments === \"full_payment\") {\r\n      setValue(\"installment_period\", 1); // Set default to 1 for full payment\r\n    }\r\n  }, [installments, setValue]); // Dependency to trigger when \"installments\" changes\r\n\r\n  const client_verify = async () => {\r\n    set_installment_amount(watch(\"installmentDetails\")?.[0].amount);\r\n    try {\r\n      const client_id = await axios.post(`${url}/container/payment_container`, {\r\n        down_payment: watch(\"installmentDetails\")?.[0].amount,\r\n      });\r\n      if (client_id.status === 200) {\r\n        console.log(client_id);\r\n        set_client_secret(client_id.data.data);\r\n        toast.success(\r\n          `Container Booking Saved on ${new Date().toLocaleDateString()}`\r\n        );\r\n        router.push(\"/payment\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n   \r\n      toast.info(\r\n        ` Client ID : Generated \\n ${new Date().toLocaleDateString()}`\r\n      );\r\n    }\r\n  };\r\n\r\n  const onsubmit = (data: any) => {\r\n    console.log(data);\r\n    set_payment_loading(true);\r\n    save_form_data(data);\r\n    client_verify();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"max-w-lg mx-auto mt-10\">\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Container Booking Form</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <form className=\"space-y-4\" onSubmit={handleSubmit(onsubmit)}>\r\n              {/* Container Type */}\r\n              <div>\r\n                <Label htmlFor=\"container_type\">Container Type</Label>\r\n                <Select\r\n                  onValueChange={(value) => setValue(\"container_type\", value)}\r\n                >\r\n                  <SelectTrigger>\r\n                    <SelectValue placeholder=\"Select Container Type\" />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    <SelectItem value=\"Refrigerated\">Refrigerated</SelectItem>\r\n                    <SelectItem value=\"Dry\">Dry</SelectItem>\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n\r\n              {/* Weight */}\r\n              <div>\r\n                <Label htmlFor=\"weight\">Weight (tons)</Label>\r\n                <Input\r\n                  id=\"weight\"\r\n                  type=\"number\"\r\n                  step=\"0.1\"\r\n                  placeholder=\"Enter weight\"\r\n                  {...register(\"weight\", {\r\n                    required: \"Weight is required\",\r\n                    min: {\r\n                      value: 0.1,\r\n                      message: \"Weight must be at least 0.1 tons\",\r\n                    },\r\n                  })}\r\n                />\r\n                {errors.weight && (\r\n                  <p className=\"text-red-500 text-sm\">\r\n                    {errors.weight.message}\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              {/* Containers */}\r\n              <div>\r\n                <div className=\"space-y-2\">\r\n                  <Table>\r\n                    <TableHeader>\r\n                      <TableRow>\r\n                        <TableHead className=\"\">Size</TableHead>\r\n                        <TableHead>Quantity</TableHead>\r\n                        <TableHead className=\"text-left\">Price</TableHead>\r\n                      </TableRow>\r\n                    </TableHeader>\r\n                    <TableBody>\r\n                      {watch(\"containers\")?.map((container, index) => (\r\n                        <TableRow key={index}>\r\n                          <TableCell className=\"font-medium\">\r\n                            {container.size}\r\n                          </TableCell>\r\n                          <TableCell>{container.quantity}</TableCell>\r\n                          <TableCell>\r\n                            {container.size === \"20 feet\"\r\n                              ? container.quantity * 1000\r\n                              : container.quantity * 2000}\r\n                            $\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                    <TableFooter>\r\n                      <TableRow>\r\n                        <TableCell colSpan={3}>Total</TableCell>\r\n                        <TableCell className=\"text-right\">\r\n                          {\" \"}\r\n                          {watch(\"containers\")?.reduce(\r\n                            (total, container) =>\r\n                              total +\r\n                              (container.size === \"20 feet\"\r\n                                ? container.quantity * 1000\r\n                                : container.quantity * 2000),\r\n                            0\r\n                          )}\r\n                          $\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableFooter>\r\n                  </Table>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Price*/}\r\n              <div>\r\n                <Label htmlFor=\"price\">Price (USD)</Label>\r\n                <Input\r\n                  readOnly\r\n                  id=\"price\"\r\n                  type=\"number\"\r\n                  placeholder=\"Enter weight\"\r\n                  {...register(\"price\")}\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <Label htmlFor=\"handling_type\">Handling Type</Label>\r\n                <Select\r\n                  onValueChange={(value) => setValue(\"handling_type\", value)}\r\n                >\r\n                  <SelectTrigger>\r\n                    <SelectValue placeholder=\"Select Handling Type\" />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    <SelectItem value=\"Employee\">\r\n                      Employee (Material Checked)\r\n                    </SelectItem>\r\n                    <SelectItem value=\"Anonymous\">\r\n                      Anonymous (No Guarantee)\r\n                    </SelectItem>\r\n                  </SelectContent>\r\n                </Select>\r\n                {errors.handling_type && (\r\n                  <p className=\"text-red-500 text-sm\">\r\n                    {errors.handling_type.message}\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              <div>\r\n                <Label htmlFor=\"installments\">Installments</Label>\r\n                <Select\r\n                  onValueChange={(value) =>\r\n                    setValue(\"installments\", value)\r\n                  }\r\n                >\r\n                  <SelectTrigger>\r\n                    <SelectValue placeholder=\"Select Installments\" />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    <SelectItem value=\"full_payment\">Full Payment</SelectItem>\r\n                    <SelectItem value=\"installment\">Installments</SelectItem>\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n\r\n          \r\n              {installments == 'installment' && (\r\n                \r\n                 <>\r\n                 \r\n                       <div>\r\n                <Label htmlFor=\"installments_period\">Installments Period</Label>\r\n                <Select\r\n                  onValueChange={(value) =>\r\n                    setValue(\"installment_period\", parseInt(value))\r\n                  }\r\n                >\r\n                  <SelectTrigger>\r\n                    <SelectValue placeholder=\"Select Installments Period\" />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    <SelectItem value=\"3\">3 months</SelectItem>\r\n                    <SelectItem value=\"6\">6 months</SelectItem>\r\n                  </SelectContent>\r\n                </Select>\r\n              </div> \r\n                 </>\r\n              )}\r\n\r\n              <div>\r\n                <div>\r\n                  <div className=\"space-y-2\">\r\n                    <Table>\r\n                      <TableHeader>\r\n                        <TableRow>\r\n                          <TableHead>Installement</TableHead>\r\n                          <TableHead>Amount</TableHead>\r\n                        </TableRow>\r\n                      </TableHeader>\r\n                      <TableBody>\r\n                        {watch(\"installmentDetails\")?.map((e: any) => {\r\n                          return (\r\n                            <>\r\n                              <TableRow key={e.installment_number}>\r\n                                <TableCell className=\"font-medium\">\r\n                                  {e.installment_number}\r\n                                </TableCell>\r\n                                <TableCell>{e.amount}$</TableCell>\r\n                              </TableRow>\r\n                            </>\r\n                          );\r\n                        })}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Receiver Details */}\r\n              <h3 className=\"text-lg font-medium\">Receiver Details</h3>\r\n              <div>\r\n                <Label htmlFor=\"receiver_name\">Receiver Name</Label>\r\n                <Input\r\n                  id=\"receiver_name\"\r\n                  type=\"text\"\r\n                  placeholder=\"Receiver's Name\"\r\n                  {...register(\"receiver_details.name\", {\r\n                    required: \"Receiver name is required\",\r\n                  })}\r\n                />\r\n                {errors.receiver_details?.name && (\r\n                  <p className=\"text-red-500 text-sm\">\r\n                    {errors.receiver_details.name.message}\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              <div>\r\n                <Label htmlFor=\"receiver_address\">Receiver Address</Label>\r\n                <Input\r\n                  id=\"receiver_address\"\r\n                  type=\"text\"\r\n                  placeholder=\"Receiver's Address\"\r\n                  {...register(\"receiver_details.address\", {\r\n                    required: \"Receiver address is required\",\r\n                  })}\r\n                />\r\n                {errors.receiver_details?.address && (\r\n                  <p className=\"text-red-500 text-sm\">\r\n                    {errors.receiver_details.address.message}\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              <div>\r\n        <Label htmlFor=\"country_code\">Country Code</Label>\r\n        <select\r\n          id=\"country_code\"\r\n          {...register(\"receiver_details.country_code\", {\r\n            required: \"Country code is required\",\r\n          })}\r\n          className=\"border p-2 rounded\"\r\n        >\r\n          <option value=\"\">Select Country Code</option>\r\n          {codes.map(({ code, callingCode, name }) => (\r\n            <option key={code} value={callingCode}>\r\n              {name} ({callingCode})\r\n            </option>\r\n          ))}\r\n        </select>\r\n        {errors.receiver_details?.country_code && (\r\n          <p className=\"text-red-500 text-sm\">\r\n            {errors.receiver_details.country_code.message}\r\n          </p>\r\n        )}\r\n      </div>\r\n\r\n              <div>\r\n                <Label htmlFor=\"receiver_phone\">Receiver Phone</Label>\r\n                <Input\r\n                  id=\"receiver_phone\"\r\n                  type=\"tel\"\r\n                  placeholder=\"Receiver's Phone\"\r\n                  {...register(\"receiver_details.phone\", {\r\n                    required: \"Receiver phone is required\",\r\n                    pattern: {\r\n                      value: /^[0-9]{10}$/,\r\n                      message: \"Enter a valid 10-digit phone number\",\r\n                    },\r\n                  })}\r\n                />\r\n                {errors.receiver_details?.phone && (\r\n                  <p className=\"text-red-500 text-sm\">\r\n                    {errors.receiver_details.phone.message}\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              {/* Submit Button */}\r\n              {payment_loading ? (\r\n                <Button disabled className=\"w-full\">\r\n                  <Loader2 className=\"animate-spin\" />\r\n                  Please wait\r\n                </Button>\r\n              ) : (\r\n                <Button type=\"submit\" className=\"w-full\">\r\n                  Payment Method\r\n                </Button>\r\n              )}\r\n            </form>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Container_Book;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2077, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2083, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ERP/erp_frontend/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst ScrollArea = React.forwardRef<\r\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\r\n>(({ className, children, ...props }, ref) => (\r\n  <ScrollAreaPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\"relative overflow-hidden\", className)}\r\n    {...props}\r\n  >\r\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\r\n      {children}\r\n    </ScrollAreaPrimitive.Viewport>\r\n    <ScrollBar />\r\n    <ScrollAreaPrimitive.Corner />\r\n  </ScrollAreaPrimitive.Root>\r\n))\r\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\r\n\r\nconst ScrollBar = React.forwardRef<\r\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\r\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\r\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\r\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\r\n    ref={ref}\r\n    orientation={orientation}\r\n    className={cn(\r\n      \"flex touch-none select-none transition-colors\",\r\n      orientation === \"vertical\" &&\r\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\r\n      orientation === \"horizontal\" &&\r\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\r\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\r\n))\r\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\r\n\r\nexport { ScrollArea, ScrollBar }\r\n"],"names":[],"mappings":";;;;;AAEA;AAGA;AAFA;AAHA;;;;;AAOA,MAAM,2BAAa,8JAAM,UAAU,MAGjC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,8KAAoB,IAAI;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,6LAAC,8KAAoB,QAAQ;gBAAC,WAAU;0BACrC;;;;;;0BAEH,6LAAC;;;;;0BACD,6LAAC,8KAAoB,MAAM;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,8KAAoB,IAAI,CAAC,WAAW;AAE7D,MAAM,0BAAY,8JAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,6LAAC,8KAAoB,mBAAmB;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,8KAAoB,eAAe;YAAC,WAAU;;;;;;;;;;;MAjB7C;AAoBN,UAAU,WAAW,GAAG,8KAAoB,mBAAmB,CAAC,WAAW"}},
    {"offset": {"line": 2154, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2160, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ERP/erp_frontend/src/components/Sidebar/sidebar.tsx"],"sourcesContent":["\"use client\";\r\nimport { useState } from \"react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\r\nimport { Home, Ship, Globe, Package, Phone } from \"lucide-react\";\r\n\r\nconst navItems = [\r\n  { icon: Home, label: \"Home\", href: \"\" },\r\n  { icon: Ship, label: \"Services\", href: \"#services\" },\r\n  { icon: Globe, label: \"Why Us\", href: \"#why-us\" },\r\n  //   { icon: Package, label: \"Login\", href: \"#gallery\" },\r\n  { icon: Phone, label: \"Contact\", href: \"#contact\" },\r\n];\r\n\r\nexport function Sidebar() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      {/* Toggle Button */}\r\n      <Button\r\n        variant=\"outline\"\r\n        size=\"icon\"\r\n        className=\"fixed top-4 left-4 z-50\"\r\n        onClick={() => setIsOpen(!isOpen)}\r\n      >\r\n        <span className=\"sr-only\">Toggle Menu</span>\r\n        {isOpen ? (\r\n          <Package className=\"h-5 w-5\" />\r\n        ) : (\r\n          <Home className=\"h-5 w-5\" />\r\n        )}\r\n      </Button>\r\n\r\n      {/* Overlay (optional) */}\r\n      {isOpen && (\r\n        <div\r\n          className=\"fixed inset-0 bg-black bg-opacity-50 z-40\"\r\n          onClick={() => setIsOpen(false)}\r\n        />\r\n      )}\r\n\r\n      {/* Sidebar */}\r\n      <div\r\n        className={`fixed top-0 left-0 h-screen w-64 bg-white shadow-lg z-50 transform ${\r\n          isOpen ? \"translate-x-0\" : \"-translate-x-full\"\r\n        } transition-transform duration-300`}\r\n      >\r\n        <ScrollArea className=\"h-full py-6 px-6\">\r\n          <div className=\"space-y-4\">\r\n            {navItems.map((item, index) => (\r\n              <a\r\n                key={index}\r\n                href={item.href}\r\n                className=\"flex items-center gap-3 rounded-lg px-3 py-2 text-gray-500 transition-all hover:text-gray-900 hover:bg-gray-100\"\r\n                onClick={() => setIsOpen(false)}\r\n              >\r\n                <item.icon className=\"h-5 w-5\" />\r\n                {item.label}\r\n              </a>\r\n            ))}\r\n          </div>\r\n        </ScrollArea>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;;;AAJA;;;;;AAMA,MAAM,WAAW;IACf;QAAE,MAAM,sMAAA,CAAA,OAAI;QAAE,OAAO;QAAQ,MAAM;IAAG;IACtC;QAAE,MAAM,qMAAA,CAAA,OAAI;QAAE,OAAO;QAAY,MAAM;IAAY;IACnD;QAAE,MAAM,uMAAA,CAAA,QAAK;QAAE,OAAO;QAAU,MAAM;IAAU;IAChD,yDAAyD;IACzD;QAAE,MAAM,uMAAA,CAAA,QAAK;QAAE,OAAO;QAAW,MAAM;IAAW;CACnD;AAEM,SAAS;;IACd,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAErC,qBACE;;0BAEE,6LAAC,qIAAA,CAAA,SAAM;gBACL,SAAQ;gBACR,MAAK;gBACL,WAAU;gBACV,SAAS,IAAM,UAAU,CAAC;;kCAE1B,6LAAC;wBAAK,WAAU;kCAAU;;;;;;oBACzB,uBACC,6LAAC,2MAAA,CAAA,UAAO;wBAAC,WAAU;;;;;6CAEnB,6LAAC,sMAAA,CAAA,OAAI;wBAAC,WAAU;;;;;;;;;;;;YAKnB,wBACC,6LAAC;gBACC,WAAU;gBACV,SAAS,IAAM,UAAU;;;;;;0BAK7B,6LAAC;gBACC,WAAW,CAAC,mEAAmE,EAC7E,SAAS,kBAAkB,oBAC5B,kCAAkC,CAAC;0BAEpC,cAAA,6LAAC,6IAAA,CAAA,aAAU;oBAAC,WAAU;8BACpB,cAAA,6LAAC;wBAAI,WAAU;kCACZ,SAAS,GAAG,CAAC,CAAC,MAAM,sBACnB,6LAAC;gCAEC,MAAM,KAAK,IAAI;gCACf,WAAU;gCACV,SAAS,IAAM,UAAU;;kDAEzB,6LAAC,KAAK,IAAI;wCAAC,WAAU;;;;;;oCACpB,KAAK,KAAK;;+BANN;;;;;;;;;;;;;;;;;;;;;;AAcrB;GApDgB;KAAA"}},
    {"offset": {"line": 2298, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2304, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ERP/erp_frontend/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\r\nimport { X } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Dialog = DialogPrimitive.Root\r\n\r\nconst DialogTrigger = DialogPrimitive.Trigger\r\n\r\nconst DialogPortal = DialogPrimitive.Portal\r\n\r\nconst DialogClose = DialogPrimitive.Close\r\n\r\nconst DialogOverlay = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Overlay\r\n    ref={ref}\r\n    className={cn(\r\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\r\n\r\nconst DialogContent = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\r\n>(({ className, children, ...props }, ref) => (\r\n  <DialogPortal>\r\n    <DialogOverlay />\r\n    <DialogPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {children}\r\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\r\n        <X className=\"h-4 w-4\" />\r\n        <span className=\"sr-only\">Close</span>\r\n      </DialogPrimitive.Close>\r\n    </DialogPrimitive.Content>\r\n  </DialogPortal>\r\n))\r\nDialogContent.displayName = DialogPrimitive.Content.displayName\r\n\r\nconst DialogHeader = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nDialogHeader.displayName = \"DialogHeader\"\r\n\r\nconst DialogFooter = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nDialogFooter.displayName = \"DialogFooter\"\r\n\r\nconst DialogTitle = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Title>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Title\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-lg font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDialogTitle.displayName = DialogPrimitive.Title.displayName\r\n\r\nconst DialogDescription = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Description>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Description\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nDialogDescription.displayName = DialogPrimitive.Description.displayName\r\n\r\nexport {\r\n  Dialog,\r\n  DialogPortal,\r\n  DialogOverlay,\r\n  DialogClose,\r\n  DialogTrigger,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogFooter,\r\n  DialogTitle,\r\n  DialogDescription,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AAIA;AAHA;AACA;AAJA;;;;;;AAQA,MAAM,SAAS,sKAAgB,IAAI;AAEnC,MAAM,gBAAgB,sKAAgB,OAAO;AAE7C,MAAM,eAAe,sKAAgB,MAAM;AAE3C,MAAM,cAAc,sKAAgB,KAAK;AAEzC,MAAM,8BAAgB,8JAAM,UAAU,CAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,sKAAgB,OAAO;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2JACA;QAED,GAAG,KAAK;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,sKAAgB,OAAO,CAAC,WAAW;AAE/D,MAAM,8BAAgB,8JAAM,UAAU,OAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,sKAAgB,OAAO;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,sKAAgB,KAAK;wBAAC,WAAU;;0CAC/B,6LAAC,+LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,sKAAgB,OAAO,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,sKAAgB,KAAK;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,sKAAgB,KAAK,CAAC,WAAW;AAE3D,MAAM,kCAAoB,8JAAM,UAAU,OAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,sKAAgB,WAAW;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,sKAAgB,WAAW,CAAC,WAAW"}},
    {"offset": {"line": 2449, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2455, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ERP/erp_frontend/src/app/client/dashboard/page.tsx"],"sourcesContent":["\"use client\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { Truck, Ship, Shield, Clock, Globe } from \"lucide-react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport Container_Book from \"@/components/Container-Book/Container_Book\";\r\nimport { Sidebar } from \"@/components/Sidebar/sidebar\";\r\nimport { Dialog, DialogTrigger, DialogContent, DialogHeader, DialogFooter } from \"@/components/ui/dialog\"; // Assuming shadcn dialog component\r\n\r\nexport default function HomePage() {\r\n  const [showBookingForm, setShowBookingForm] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // State to track login status\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false); // State to control confirmation dialog\r\n  const [showAuthModal, setShowAuthModal] = useState(false); // State for signup/login modal\r\n  const router = useRouter();\r\n\r\n  // Check if token is in localStorage and update login status\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      setIsLoggedIn(true); // Set isLoggedIn to true if token exists\r\n    }\r\n  }, []); // Only run once on component mount\r\n\r\n  // Logout function\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"token\"); // Remove token from localStorage\r\n    router.push(\"/login\"); // Redirect to login page\r\n  };\r\n\r\n  // Handle Rent a Container Now button click\r\n  const handleRentContainerClick = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      setShowAuthModal(true); // Show signup/login modal if no token found\r\n    } else {\r\n      setShowBookingForm(true); // Proceed to booking if token exists\r\n    }\r\n  };\r\n\r\n  const services = [\r\n    {\r\n      icon: Ship,\r\n      title: \"Sea Freight\",\r\n      description:\r\n        \"Efficient container shipping across oceans, connecting continents with your cargo.\",\r\n      image: \"/ship.avif\", // Replace with your actual image URL\r\n    },\r\n    {\r\n      icon: Truck,\r\n      title: \"Truck Transportation\",\r\n      description:\r\n        \"Seamless inland transportation of containers to and from ports, ensuring door-to-door delivery.\",\r\n      image: \"/truck.avif\", // Replace with your actual image URL\r\n    },\r\n  ];\r\n\r\n  const whyChooseUs = [\r\n    {\r\n      icon: Globe,\r\n      title: \"Global Reach\",\r\n      description:\r\n        \"Connect with markets worldwide through our extensive shipping network.\",\r\n      image: \"/global.avif\", // Replace with your actual image URL\r\n    },\r\n    {\r\n      icon: Clock,\r\n      title: \"Timely Delivery\",\r\n      description:\r\n        \"Reliable schedules and efficient routes to ensure your cargo arrives on time.\",\r\n      image: \"/delivery.avif\", // Replace with your actual image URL\r\n    },\r\n    {\r\n      icon: Shield,\r\n      title: \"Secure Transport\",\r\n      description:\r\n        \"State-of-the-art tracking and security measures to protect your shipments.\",\r\n      image: \"/secure.avif\", // Replace with your actual image URL\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100\">\r\n      {/* <Sidebar /> */}\r\n      {showBookingForm ? (\r\n        <Container_Book />\r\n      ) : (\r\n        <div className=\"transition-all duration-300\">\r\n          <section id=\"services\" className=\"py-16 bg-white\">\r\n            <div className=\"container mx-auto\">\r\n              <div className=\"flex items-center justify-between mb-12\">\r\n                <h2 className=\"text-3xl font-bold text-center\">Our Services</h2>\r\n                {isLoggedIn && ( // Conditionally render Logout button\r\n                  <Button onClick={() => setIsDialogOpen(true)}>Logout</Button>\r\n                )}\r\n              </div>\r\n              <div className=\"space-y-12\">\r\n                {services.map((service, index) => (\r\n                  <div\r\n                    key={index}\r\n                    className=\"flex flex-col md:flex-row items-center gap-8\"\r\n                  >\r\n                    <div className=\"md:w-1/2 space-y-4\">\r\n                      <service.icon className=\"w-12 h-12 text-blue-600\" />\r\n                      <h3 className=\"text-2xl font-semibold\">\r\n                        {service.title}\r\n                      </h3>\r\n                      <p>{service.description}</p>\r\n                    </div>\r\n                    <div className=\"md:w-1/2\">\r\n                      <img\r\n                        src={service.image}\r\n                        alt={service.title}\r\n                        className=\"w-full h-auto rounded-lg shadow-md\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </section>\r\n\r\n          <section id=\"why-us\" className=\"bg-gray-100 py-16\">\r\n            <div className=\"container mx-auto\">\r\n              <h2 className=\"text-3xl font-bold text-center mb-12\">\r\n                Why Choose Us\r\n              </h2>\r\n              <div className=\"space-y-12\">\r\n                {whyChooseUs.map((item, index) => (\r\n                  <div\r\n                    key={index}\r\n                    className={`flex flex-col md:flex-row items-center gap-8 ${\r\n                      index % 2 === 0 ? \"md:flex-row-reverse\" : \"\"\r\n                    }`}\r\n                  >\r\n                    <div className=\"md:w-1/2 space-y-4\">\r\n                      <item.icon className=\"w-12 h-12 text-blue-600\" />\r\n                      <h3 className=\"text-2xl font-semibold\">{item.title}</h3>\r\n                      <p>{item.description}</p>\r\n                    </div>\r\n                    <div className=\"md:w-1/2\">\r\n                      <img\r\n                        src={item.image}\r\n                        alt={item.title}\r\n                        className=\"w-full h-auto rounded-lg shadow-md\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </section>\r\n\r\n          <section id=\"rent\" className=\"py-16 bg-blue-50\">\r\n            <div className=\"container mx-auto text-center\">\r\n              <h2 className=\"text-3xl font-bold mb-4\">Ready to Ship?</h2>\r\n              <p className=\"text-xl mb-8\">\r\n                Rent our containers and start moving your goods across the globe\r\n                today.\r\n              </p>\r\n              <Button\r\n                size=\"lg\"\r\n                onClick={handleRentContainerClick}\r\n                className=\"font-semibold bg-blue-600 text-white hover:bg-blue-700 transition-colors duration-300\"\r\n              >\r\n                Rent a Container Now\r\n              </Button>\r\n            </div>\r\n          </section>\r\n        </div>\r\n      )}\r\n\r\n      {/* Logout Confirmation Dialog */}\r\n      <Dialog open={isDialogOpen} onOpenChange={setIsDialogOpen}>\r\n        <DialogContent>\r\n          <DialogHeader>Confirm Logout</DialogHeader>\r\n          <p>Are you sure you want to logout?</p>\r\n          <DialogFooter>\r\n            <Button onClick={handleLogout} className=\"bg-red-500\">\r\n              Yes, Logout\r\n            </Button>\r\n            <Button variant=\"secondary\" onClick={() => setIsDialogOpen(false)}>\r\n              No, Cancel\r\n            </Button>\r\n          </DialogFooter>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      {/* Signup/Login Modal */}\r\n      <Dialog open={showAuthModal} onOpenChange={setShowAuthModal}>\r\n        <DialogContent>\r\n          <DialogHeader className=\"font-bold text-lg\">Authentication Required</DialogHeader>\r\n          <p>You need to sign up or log in to continue with the booking.</p>\r\n          <DialogFooter>\r\n            <Button onClick={() => router.push(\"/register\")} className=\"bg-green-500\">\r\n              Sign Up\r\n            </Button>\r\n            <Button onClick={() => router.push(\"/login\")} className=\"bg-blue-500\">\r\n              Log In\r\n            </Button>\r\n            <Button variant=\"secondary\" className=\"bg-gray-300\" onClick={() => setShowAuthModal(false)}>\r\n              Cancel\r\n            </Button>\r\n          </DialogFooter>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2935, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}