{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ERP/erp_frontend/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ERP/erp_frontend/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\r\n        outline:\r\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-10 px-4 py-2\",\r\n        sm: \"h-9 rounded-md px-3\",\r\n        lg: \"h-11 rounded-md px-8\",\r\n        icon: \"h-10 w-10\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\"\r\n    return (\r\n      <Comp\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,8JAAM,UAAU,MAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ERP/erp_frontend/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,8JAAM,UAAU,MAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ERP/erp_frontend/src/apiURL.ts"],"sourcesContent":["// export const url = \"https://erp-woad-pi.vercel.app/v1\";\r\nexport const url = \"http://localhost:3000/v1\";\r\n"],"names":[],"mappings":"AAAA,0DAA0D;;;;AACnD,MAAM,MAAM"}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ERP/erp_frontend/src/services/authService.ts"],"sourcesContent":["// /src/services/authService.ts\r\nimport axios from \"axios\";\r\nimport { url } from \"@/apiURL\";\r\nexport const registerClient = async (clientData: any) => {\r\n  try {\r\n    const response = await axios.post(`${url}/client/register`, clientData);\r\n    return response.data;\r\n  } catch (error: any) {\r\n    console.error(\"Error during registration:\", error.response.data || error);\r\n    // throw error; // Rethrow the error so the mutation can catch it\r\n  }\r\n};\r\n// services/authService.ts\r\n// export async function loginClient(credentials: {\r\n//   email: string;\r\n//   password: string;\r\n// }) {\r\n//   const response = await fetch(`${url}/client/login`, {\r\n//     method: \"POST\",\r\n//     headers: {\r\n//       \"Content-Type\": \"application/json\",\r\n//     },\r\n//     body: JSON.stringify(credentials),\r\n//   });\r\n\r\n//   if (!response.ok) {\r\n//     throw new Error(\"Login failed\");\r\n//   }\r\n\r\n//   const data = await response.json();\r\n//   return data; // Assuming 'data' contains the token and other user details\r\n// }\r\n// Client login\r\nexport const loginClient = async (credentials: {\r\n  username: string;\r\n  password: string;\r\n}) => {\r\n  const response = await axios.post(`${url}/client/login`, credentials);\r\n  if (response.status !== 200) throw new Error(\"Login failed\");\r\n  return response.data; // Assuming response contains the token and other user details\r\n};\r\n\r\n// Admin login\r\nexport const loginAdmin = async (credentials: {\r\n  username: string;\r\n  password: string;\r\n}) => {\r\n  const response = await axios.post(`${url}/admin/login`, credentials);\r\n  if (response.status !== 200) throw new Error(\"Login failed\");\r\n  return response.data;\r\n};\r\n\r\n// Employee login\r\nexport const loginEmployee = async (credentials: {\r\n  username: string;\r\n  password: string;\r\n}) => {\r\n  const response = await axios.post(`${url}/employee/login`, credentials);\r\n  if (response.status !== 200) throw new Error(\"Login failed\");\r\n  return response.data;\r\n};\r\n\r\nexport const resetPasswordRequest = async (email: string) => {\r\n  const response = await axios.post(`${url}/client/reset-password`, { email });\r\n  return response.data;\r\n};\r\n\r\nexport const updatePasswordRequest = async (\r\n  token: string,\r\n  newPassword: string\r\n) => {\r\n  const response = await axios.post(`${url}/client/update-password`, {\r\n    token,\r\n    newPassword,\r\n  });\r\n  return response.data;\r\n};\r\n"],"names":[],"mappings":"AAAA,+BAA+B;;;;;;;;;AAE/B;AADA;;;AAEO,MAAM,iBAAiB,OAAO;IACnC,IAAI;QACF,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,gHAAA,CAAA,MAAG,CAAC,gBAAgB,CAAC,EAAE;QAC5D,OAAO,SAAS,IAAI;IACtB,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,8BAA8B,MAAM,QAAQ,CAAC,IAAI,IAAI;IACnE,iEAAiE;IACnE;AACF;AAsBO,MAAM,cAAc,OAAO;IAIhC,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,gHAAA,CAAA,MAAG,CAAC,aAAa,CAAC,EAAE;IACzD,IAAI,SAAS,MAAM,KAAK,KAAK,MAAM,IAAI,MAAM;IAC7C,OAAO,SAAS,IAAI,EAAE,8DAA8D;AACtF;AAGO,MAAM,aAAa,OAAO;IAI/B,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,gHAAA,CAAA,MAAG,CAAC,YAAY,CAAC,EAAE;IACxD,IAAI,SAAS,MAAM,KAAK,KAAK,MAAM,IAAI,MAAM;IAC7C,OAAO,SAAS,IAAI;AACtB;AAGO,MAAM,gBAAgB,OAAO;IAIlC,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,gHAAA,CAAA,MAAG,CAAC,eAAe,CAAC,EAAE;IAC3D,IAAI,SAAS,MAAM,KAAK,KAAK,MAAM,IAAI,MAAM;IAC7C,OAAO,SAAS,IAAI;AACtB;AAEO,MAAM,uBAAuB,OAAO;IACzC,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,gHAAA,CAAA,MAAG,CAAC,sBAAsB,CAAC,EAAE;QAAE;IAAM;IAC1E,OAAO,SAAS,IAAI;AACtB;AAEO,MAAM,wBAAwB,OACnC,OACA;IAEA,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,gHAAA,CAAA,MAAG,CAAC,uBAAuB,CAAC,EAAE;QACjE;QACA;IACF;IACA,OAAO,SAAS,IAAI;AACtB"}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 202, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ERP/erp_frontend/src/app/forgotPassword/page.tsx"],"sourcesContent":["\"use client\";\r\nimport { useState } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { toast } from \"react-toastify\";\r\nimport { resetPasswordRequest } from \"@/services/authService\"; // Ensure this exists\r\n\r\nexport default function ForgotPassword() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false); // To manage loading state\r\n  const [error, setError] = useState<string | null>(null); // To manage error state\r\n  const router = useRouter();\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      // Using the custom resetPasswordRequest function to call your API\r\n      await resetPasswordRequest(email);\r\n      toast.success(\"Password reset email sent! Please check your inbox.\");\r\n      router.push(\"/login\"); // Redirect to login after success\r\n    } catch (err: any) {\r\n      setError(err?.message || \"An error occurred. Please try again.\");\r\n      toast.error(\"Failed to send password reset email. Please try again.\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center bg-gray-300 justify-center min-h-screen px-5\">\r\n      <div className=\"max-w-lg w-full bg-white p-8 shadow-xl rounded-xl\">\r\n        <h1 className=\"text-3xl font-bold mb-4 text-center\">Forgot Password</h1>\r\n        <p className=\"text-center mb-6 text-gray-600\">\r\n          Enter your email address to reset your password.\r\n        </p>\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <Input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <Button type=\"submit\" disabled={isLoading} className=\"w-full\">\r\n            {isLoading ? \"Sending...\" : \"Reset Password\"}\r\n          </Button>\r\n          {error && <p className=\"text-red-500\">{error}</p>}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AACA;AACA,iOAA+D,qBAAqB;;;AANpF;;;;;;;AAQe,SAAS;;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ,0BAA0B;IAC7E,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB,OAAO,wBAAwB;IACjF,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,eAAe,CAAC;QACpB,SAAS,EAAE,MAAM,CAAC,KAAK;IACzB;IAEA,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,aAAa;QACb,SAAS;QAET,IAAI;YACF,kEAAkE;YAClE,MAAM,CAAA,GAAA,iIAAA,CAAA,uBAAoB,AAAD,EAAE;YAC3B,yKAAA,CAAA,QAAK,CAAC,OAAO,CAAC;YACd,OAAO,IAAI,CAAC,WAAW,kCAAkC;QAC3D,EAAE,OAAO,KAAU;YACjB,SAAS,KAAK,WAAW;YACzB,yKAAA,CAAA,QAAK,CAAC,KAAK,CAAC;QACd,SAAU;YACR,aAAa;QACf;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAG,WAAU;8BAAsC;;;;;;8BACpD,6LAAC;oBAAE,WAAU;8BAAiC;;;;;;8BAG9C,6LAAC;oBAAK,UAAU;oBAAc,WAAU;;sCACtC,6LAAC,oIAAA,CAAA,QAAK;4BACJ,MAAK;4BACL,MAAK;4BACL,aAAY;4BACZ,OAAO;4BACP,UAAU;4BACV,QAAQ;;;;;;sCAEV,6LAAC,qIAAA,CAAA,SAAM;4BAAC,MAAK;4BAAS,UAAU;4BAAW,WAAU;sCAClD,YAAY,eAAe;;;;;;wBAE7B,uBAAS,6LAAC;4BAAE,WAAU;sCAAgB;;;;;;;;;;;;;;;;;;;;;;;AAKjD;GApDwB;;QAIP,qIAAA,CAAA,YAAS;;;KAJF"}},
    {"offset": {"line": 330, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}