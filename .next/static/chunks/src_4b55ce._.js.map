{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ERP/erp_frontend/src/components/AdminNavbar.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState } from 'react';\r\nimport Link from 'next/link'; // Import Link from Next.js\r\nimport { useRouter } from 'next/navigation'; // For redirecting to login\r\nimport '../app/globals.css';\r\n\r\nconst AdminNavbar: React.FC = () => {\r\n  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n  const [showLogoutDialog, setShowLogoutDialog] = useState(false); // State to show the confirmation dialog\r\n  const router = useRouter();\r\n\r\n  const toggleSidebar = () => {\r\n    setSidebarOpen(!sidebarOpen);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    // Remove token from localStorage\r\n    localStorage.removeItem('token');\r\n    // Redirect to login page\r\n    router.push('/login');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Top Navbar */}\r\n      <div className=\"flex items-center justify-between bg-gray-100 px-4 py-3 shadow-md\">\r\n        <div className=\"flex items-center\">\r\n          <button\r\n            onClick={toggleSidebar}\r\n            className=\"p-2 rounded-full hover:bg-gray-200 focus:outline-none\"\r\n          >\r\n            {/* Menu Icon */}\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"h-5 w-5\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth=\"2\"\r\n                d=\"M4 6h16M4 12h16M4 18h7\"\r\n              />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"text-xl font-semibold text-gray-800\">\r\n          <Link href=\"#\">Admin Panel</Link>\r\n        </div>\r\n\r\n        <div className=\"flex items-center space-x-4\">\r\n          {/* Search Icon */}\r\n          <button className=\"p-2 rounded-full hover:bg-gray-200 focus:outline-none\">\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"h-5 w-5\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth=\"2\"\r\n                d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\r\n              />\r\n            </svg>\r\n          </button>\r\n\r\n          {/* Notifications Icon with Badge */}\r\n          <button className=\"relative p-2 rounded-full hover:bg-gray-200 focus:outline-none\">\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"h-5 w-5\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth=\"2\"\r\n                d=\"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\"\r\n              />\r\n            </svg>\r\n            <span className=\"absolute top-0 right-0 inline-flex h-2 w-2 rounded-full bg-blue-500\"></span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Sidebar */}\r\n      <div\r\n        className={`fixed inset-y-0 left-0 w-64 bg-gray-200 shadow-lg transform ${sidebarOpen ? 'translate-x-0' : '-translate-x-full'} transition-transform duration-300 ease-in-out z-50`}\r\n      >\r\n        <div className=\"flex justify-between items-center bg-gray-300 px-4 py-3 shadow-md\">\r\n          <h2 className=\"text-xl font-semibold\">Menu</h2>\r\n          <button onClick={toggleSidebar} className=\"text-gray-600 focus:outline-none\">\r\n            {/* Close Icon */}\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"h-6 w-6\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth=\"2\"\r\n                d=\"M6 18L18 6M6 6l12 12\"\r\n              />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n\r\n        <ul className=\"p-4 space-y-4\">\r\n          <li className=\"px-4 py-2 hover:bg-gray-300 rounded-lg cursor-pointer\">\r\n            <Link href=\"/employeeRegister\">Add Employees</Link>\r\n          </li>\r\n          <li className=\"px-4 py-2 hover:bg-gray-300 rounded-lg cursor-pointer\">\r\n            <Link href=\"/GetEmployee\">Employees List</Link>\r\n          </li>\r\n          {/* Logout Button */}\r\n          <li className=\"px-4 py-2 hover:bg-gray-300 rounded-lg cursor-pointer\" onClick={() => setShowLogoutDialog(true)}>\r\n            Logout\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      {/* Overlay for Sidebar when open */}\r\n      {sidebarOpen && (\r\n        <div\r\n          className=\"fixed inset-0 bg-black opacity-25 z-40\"\r\n          onClick={toggleSidebar}\r\n        ></div>\r\n      )}\r\n\r\n      {/* Confirmation Dialog for Logout */}\r\n      {showLogoutDialog && (\r\n        <div className=\"fixed inset-0 flex items-center justify-center z-50 bg-black bg-opacity-50\">\r\n          <div className=\"bg-white p-6 rounded-lg shadow-lg\">\r\n            <h3 className=\"text-lg font-semibold mb-4\">Are you sure you want to log out?</h3>\r\n            <div className=\"flex space-x-4\">\r\n              <button\r\n                className=\"px-4 py-2 bg-green-500 text-white rounded-lg\"\r\n                onClick={handleLogout}\r\n              >\r\n                Yes\r\n              </button>\r\n              <button\r\n                className=\"px-4 py-2 bg-red-500 text-white rounded-lg\"\r\n                onClick={() => setShowLogoutDialog(false)}\r\n              >\r\n                No\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminNavbar;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 348, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 354, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ERP/erp_frontend/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 367, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 373, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ERP/erp_frontend/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\r\n        outline:\r\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-10 px-4 py-2\",\r\n        sm: \"h-9 rounded-md px-3\",\r\n        lg: \"h-11 rounded-md px-8\",\r\n        icon: \"h-10 w-10\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\"\r\n    return (\r\n      <Comp\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,8JAAM,UAAU,MAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 434, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 440, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ERP/erp_frontend/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Table = React.forwardRef<\r\n  HTMLTableElement,\r\n  React.HTMLAttributes<HTMLTableElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div className=\"relative w-full overflow-auto\">\r\n    <table\r\n      ref={ref}\r\n      className={cn(\"w-full caption-bottom text-sm\", className)}\r\n      {...props}\r\n    />\r\n  </div>\r\n))\r\nTable.displayName = \"Table\"\r\n\r\nconst TableHeader = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\r\n))\r\nTableHeader.displayName = \"TableHeader\"\r\n\r\nconst TableBody = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tbody\r\n    ref={ref}\r\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableBody.displayName = \"TableBody\"\r\n\r\nconst TableFooter = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tfoot\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableFooter.displayName = \"TableFooter\"\r\n\r\nconst TableRow = React.forwardRef<\r\n  HTMLTableRowElement,\r\n  React.HTMLAttributes<HTMLTableRowElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tr\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableRow.displayName = \"TableRow\"\r\n\r\nconst TableHead = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.ThHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <th\r\n    ref={ref}\r\n    className={cn(\r\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableHead.displayName = \"TableHead\"\r\n\r\nconst TableCell = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.TdHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <td\r\n    ref={ref}\r\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableCell.displayName = \"TableCell\"\r\n\r\nconst TableCaption = React.forwardRef<\r\n  HTMLTableCaptionElement,\r\n  React.HTMLAttributes<HTMLTableCaptionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <caption\r\n    ref={ref}\r\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableCaption.displayName = \"TableCaption\"\r\n\r\nexport {\r\n  Table,\r\n  TableHeader,\r\n  TableBody,\r\n  TableFooter,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableCaption,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,8JAAM,UAAU,MAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,8JAAM,UAAU,OAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,8JAAM,UAAU,OAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,8JAAM,UAAU,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,8JAAM,UAAU,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,8JAAM,UAAU,QAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;;AAGb,aAAa,WAAW,GAAG"}},
    {"offset": {"line": 572, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 578, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ERP/erp_frontend/src/components/GetEmployees.tsx"],"sourcesContent":["\"use client\";\r\nimport useSWR from \"swr\";\r\nimport Link from \"next/link\";\r\nimport { Button } from \"@/components/ui/button\"; // Import ShadCN Button component\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"; // Import ShadCN Table components\r\nimport { RxReload } from \"react-icons/rx\";\r\n\r\ninterface Employee {\r\n  _id: number;\r\n  name: string;\r\n  email: string;\r\n  phoneno: string;\r\n  address: string;\r\n  cnic_no: string;\r\n  password?: string; // Optional since we might not need to display it\r\n  profilePic?: string; // Optional since not all employees may have this\r\n}\r\n\r\n// Fetcher function for SWR\r\nconst fetcher = (url: string) => fetch(url).then((res) => {\r\n  if (!res.ok) {\r\n    throw new Error(\"Failed to fetch data\");\r\n  }\r\n  return res.json();\r\n});\r\n\r\nexport default function GetEmployees() {\r\n  const { data, error, isLoading } = useSWR(\"https://erp-woad-pi.vercel.app/v1/employe/getallemployee\", fetcher);\r\n\r\n  const employees: Employee[] = data?.employees || [];\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-6\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Employee List</h1>\r\n\r\n      {/* Show loading state */}\r\n      {isLoading && <p><RxReload/></p>}\r\n\r\n      {/* Show error message */}\r\n      {error && <p className=\"text-red-500\">{error.message || \"Something went wrong\"}</p>}\r\n\r\n      {/* Employee Table */}\r\n      {!isLoading && !error && employees.length > 0 && (\r\n        <div className=\"overflow-x-auto bg-white shadow-lg rounded-lg\">\r\n          <Table>\r\n            <TableHeader>\r\n              <TableRow>\r\n                <TableHead>Name</TableHead>\r\n                <TableHead>Email</TableHead>\r\n                <TableHead>Phone</TableHead>\r\n                <TableHead>Address</TableHead>\r\n                <TableHead>CNIC</TableHead>\r\n                <TableHead>Details</TableHead>\r\n              </TableRow>\r\n            </TableHeader>\r\n            <TableBody>\r\n              {employees.map((employee) => (\r\n                <TableRow key={employee._id}>\r\n                  <TableCell>{employee.name}</TableCell>\r\n                  <TableCell>{employee.email}</TableCell>\r\n                  <TableCell>{employee.phoneno}</TableCell>\r\n                  <TableCell>{employee.address}</TableCell>\r\n                  <TableCell>{employee.cnic_no}</TableCell>\r\n                  <TableCell>\r\n                    <Link href={`/employees/${employee._id}`} passHref>\r\n                      <Button variant=\"secondary\">View Details</Button>\r\n                    </Link>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      )}\r\n\r\n      {/* Show no data message */}\r\n      {!isLoading && !error && employees.length === 0 && <p>No employees found.</p>}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;AACA;AACA;AACA,sOAAiD,iCAAiC;AAClF,oOAAuG,iCAAiC;AAHxI;AAIA;;;AALA;;;;;;AAkBA,2BAA2B;AAC3B,MAAM,UAAU,CAAC,MAAgB,MAAM,KAAK,IAAI,CAAC,CAAC;QAChD,IAAI,CAAC,IAAI,EAAE,EAAE;YACX,MAAM,IAAI,MAAM;QAClB;QACA,OAAO,IAAI,IAAI;IACjB;AAEe,SAAS;;IACtB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,gKAAA,CAAA,UAAM,AAAD,EAAE,4DAA4D;IAEtG,MAAM,YAAwB,MAAM,aAAa,EAAE;IAEnD,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAA0B;;;;;;YAGvC,2BAAa,6LAAC;0BAAE,cAAA,6LAAC,iJAAA,CAAA,WAAQ;;;;;;;;;;YAGzB,uBAAS,6LAAC;gBAAE,WAAU;0BAAgB,MAAM,OAAO,IAAI;;;;;;YAGvD,CAAC,aAAa,CAAC,SAAS,UAAU,MAAM,GAAG,mBAC1C,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,oIAAA,CAAA,QAAK;;sCACJ,6LAAC,oIAAA,CAAA,cAAW;sCACV,cAAA,6LAAC,oIAAA,CAAA,WAAQ;;kDACP,6LAAC,oIAAA,CAAA,YAAS;kDAAC;;;;;;kDACX,6LAAC,oIAAA,CAAA,YAAS;kDAAC;;;;;;kDACX,6LAAC,oIAAA,CAAA,YAAS;kDAAC;;;;;;kDACX,6LAAC,oIAAA,CAAA,YAAS;kDAAC;;;;;;kDACX,6LAAC,oIAAA,CAAA,YAAS;kDAAC;;;;;;kDACX,6LAAC,oIAAA,CAAA,YAAS;kDAAC;;;;;;;;;;;;;;;;;sCAGf,6LAAC,oIAAA,CAAA,YAAS;sCACP,UAAU,GAAG,CAAC,CAAC,yBACd,6LAAC,oIAAA,CAAA,WAAQ;;sDACP,6LAAC,oIAAA,CAAA,YAAS;sDAAE,SAAS,IAAI;;;;;;sDACzB,6LAAC,oIAAA,CAAA,YAAS;sDAAE,SAAS,KAAK;;;;;;sDAC1B,6LAAC,oIAAA,CAAA,YAAS;sDAAE,SAAS,OAAO;;;;;;sDAC5B,6LAAC,oIAAA,CAAA,YAAS;sDAAE,SAAS,OAAO;;;;;;sDAC5B,6LAAC,oIAAA,CAAA,YAAS;sDAAE,SAAS,OAAO;;;;;;sDAC5B,6LAAC,oIAAA,CAAA,YAAS;sDACR,cAAA,6LAAC,+HAAA,CAAA,UAAI;gDAAC,MAAM,CAAC,WAAW,EAAE,SAAS,GAAG,EAAE;gDAAE,QAAQ;0DAChD,cAAA,6LAAC,qIAAA,CAAA,SAAM;oDAAC,SAAQ;8DAAY;;;;;;;;;;;;;;;;;mCARnB,SAAS,GAAG;;;;;;;;;;;;;;;;;;;;;YAmBpC,CAAC,aAAa,CAAC,SAAS,UAAU,MAAM,KAAK,mBAAK,6LAAC;0BAAE;;;;;;;;;;;;AAG5D;GArDwB;;QACa,gKAAA,CAAA,UAAM;;;KADnB"}},
    {"offset": {"line": 804, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}