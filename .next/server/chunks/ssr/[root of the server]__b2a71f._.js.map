{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ERP/erp_frontend/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ERP/erp_frontend/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,sMAAM,UAAU,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,sMAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,sMAAM,UAAU,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ERP/erp_frontend/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Table = React.forwardRef<\r\n  HTMLTableElement,\r\n  React.HTMLAttributes<HTMLTableElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div className=\"relative w-full overflow-auto\">\r\n    <table\r\n      ref={ref}\r\n      className={cn(\"w-full caption-bottom text-sm\", className)}\r\n      {...props}\r\n    />\r\n  </div>\r\n))\r\nTable.displayName = \"Table\"\r\n\r\nconst TableHeader = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\r\n))\r\nTableHeader.displayName = \"TableHeader\"\r\n\r\nconst TableBody = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tbody\r\n    ref={ref}\r\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableBody.displayName = \"TableBody\"\r\n\r\nconst TableFooter = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tfoot\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableFooter.displayName = \"TableFooter\"\r\n\r\nconst TableRow = React.forwardRef<\r\n  HTMLTableRowElement,\r\n  React.HTMLAttributes<HTMLTableRowElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tr\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableRow.displayName = \"TableRow\"\r\n\r\nconst TableHead = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.ThHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <th\r\n    ref={ref}\r\n    className={cn(\r\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableHead.displayName = \"TableHead\"\r\n\r\nconst TableCell = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.TdHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <td\r\n    ref={ref}\r\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableCell.displayName = \"TableCell\"\r\n\r\nconst TableCaption = React.forwardRef<\r\n  HTMLTableCaptionElement,\r\n  React.HTMLAttributes<HTMLTableCaptionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <caption\r\n    ref={ref}\r\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableCaption.displayName = \"TableCaption\"\r\n\r\nexport {\r\n  Table,\r\n  TableHeader,\r\n  TableBody,\r\n  TableFooter,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableCaption,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,sMAAM,UAAU,CAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,sMAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,sMAAM,UAAU,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,sMAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,sMAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,sMAAM,UAAU,CAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG"}},
    {"offset": {"line": 208, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 214, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ERP/erp_frontend/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,sMAAM,UAAU,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 237, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 243, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ERP/erp_frontend/src/apiURL.ts"],"sourcesContent":["// export const url = \"https://erp-woad-pi.vercel.app/v1\";\r\nexport const url = \"http://localhost:3000/v1\";\r\n"],"names":[],"mappings":"AAAA,0DAA0D;;;;AACnD,MAAM,MAAM"}},
    {"offset": {"line": 248, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 334, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ERP/erp_frontend/src/app/employee/sales/dashboard/page.tsx"],"sourcesContent":["\"use client\";\r\nimport React, { useState } from \"react\";\r\nimport { Card, CardContent, CardFooter } from \"@/components/ui/card\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableFooter,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"@/components/ui/table\";\r\nimport { Input } from \"@/components/ui/input\"\r\nimport useSWR from \"swr\";\r\nimport axios from \"axios\";\r\nimport { url } from \"@/apiURL\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Button } from \"../ui/button\";\r\nimport Skeleton_Loading from \"../Skeleton_Loading/Skeleton_Loading\";\r\n\r\nconst Order_Containe = () => {\r\n\r\n    const {register , handleSubmit , reset } = useForm();\r\n    const [container_data , set_container_data] = useState([]);\r\n\r\n    const fetcher = async () => {\r\n        try {\r\n          const fetch_data = await axios.get(`${url}/container/all_orders_container`);\r\n          set_container_data(fetch_data.data.data)\r\n          return fetch_data.data.data;\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      };\r\n\r\n    const { data, error, isLoading } = useSWR(\"/api/containers\", fetcher);\r\n\r\n    function removeEmptyKeys(obj: Record<string, any>): Record<string, any> {\r\n        return Object.fromEntries(\r\n          Object.entries(obj).filter(([_, value]) => value !== undefined && value !== null && value !== \"\")\r\n        );\r\n      }\r\n\r\n    const onsubmit = async(data : any) => {\r\n        try{\r\n           const new_Data =  removeEmptyKeys(data);\r\n            const response = await axios.post(`${url}/container/filter_container_orders`, new_Data);\r\n            set_container_data(response.data.data);\r\n        }\r\n        catch(e){\r\n         console.log(e);\r\n        }\r\n    }\r\n\r\n    if (isLoading) return <Skeleton_Loading />;\r\n    if (error) return <p>Error loading data: {error.message}</p>;\r\n\r\n  return (\r\n    <>\r\n    <form onSubmit={handleSubmit(onsubmit)} >\r\n     <div className=\" mx-20  gap-5 my-10 flex justify-evenly flex-wrap\">\r\n     <div><Input type=\"text\" {...register('container_type')} placeholder=\"Container Type\" /></div>\r\n     <div><Input type=\"text\" {...register('weight')} placeholder=\"weight\" /></div>\r\n     <div><Input type=\"text\" {...register('size')} placeholder=\"Size\" /></div>\r\n     <div><Input type=\"text\" {...register('price')} placeholder=\"Amount\" /></div>\r\n     <div><Input type=\"text\" {...register('handle_type')} placeholder=\"Handle Type\" /></div>\r\n     <div><Input type=\"text\" {...register('tracking_status')} placeholder=\"Tracking Status\" /></div>\r\n     <div><Input type=\"text\" {...register('status')} placeholder=\"Installement Status\" /></div>\r\n     <div><Input type=\"text\" {...register('startDate')} placeholder=\"Date\" /></div>\r\n     <div><Button type=\"submit\" >Search</Button></div>\r\n     </div>\r\n    </form>\r\n\r\n     {container_data.length > 0 ?\r\n\r\n     <div className=\" my-10\">\r\n        <div className=\"flex gap-5  justify-evenly flex-wrap\">\r\n          {container_data?.map((e: any) => {\r\n            const s = e.tracking_stages.delivered.status;\r\n            const s_d = new Date(\r\n              e.tracking_stages.delivered.timestamp\r\n            ).toLocaleDateString();\r\n            const p = e.tracking_stages.pickup.status;\r\n            const p_d = new Date(\r\n              e.tracking_stages.pickup.timestamp\r\n            ).toLocaleDateString();\r\n            const t = e.tracking_stages.inTransit.status;\r\n            const t_d = new Date(\r\n              e.tracking_stages.inTransit.timestamp\r\n            ).toLocaleDateString();\r\n            return (\r\n              <>\r\n                <Card\r\n                  key={e._id}\r\n                  className=\" w-2/5 mx-auto shadow-md hover:shadow-lg transition-shadow duration-300 \"\r\n                >\r\n                  <CardContent className=\"mt-4\">\r\n                    <h4 className=\"text-lg font-semibold mt-2\">\r\n                      Container : {e.container_type}\r\n                    </h4>\r\n                    <Table className=\"mt-2\">\r\n                      <TableHeader>\r\n                        <TableRow>\r\n                          <TableHead className=\"w-[100px]\">Sno</TableHead>\r\n                          <TableHead>Conatainer Size</TableHead>\r\n                          <TableHead>Quantity</TableHead>\r\n                        </TableRow>\r\n                      </TableHeader>\r\n                      <TableBody>\r\n                        {e?.containers?.map((installment: any, index: any) => (\r\n                          <TableRow key={index}>\r\n                            <TableCell className=\"font-medium\">\r\n                              {index + 1}\r\n                            </TableCell>\r\n                            <TableCell>{installment.size}</TableCell>\r\n                            <TableCell>{installment.quantity}</TableCell>\r\n                          </TableRow>\r\n                        ))}\r\n                      </TableBody>\r\n                    </Table>\r\n                    <p className=\"text-sm text-gray-600 mt-2\">\r\n                      Material Weight : {e.weight} Tons\r\n                    </p>\r\n                    <p className=\"text-sm text-gray-600 mt-2\">Material Security : {e.handle_type}</p>\r\n                    <div className=\"mt-2\">\r\n                      <h4 className=\"text-lg font-semibold mt-2\">\r\n                        Receiver Details:\r\n                      </h4>\r\n                      <p className=\"text-sm text-gray-600  mt-2\">\r\n                        Name : {e?.receiver_details?.name}\r\n                      </p>\r\n                      <p className=\" text-sm text-gray-600 mt-2\">\r\n                        Address : {e?.receiver_details?.address}\r\n                      </p>\r\n                      <p className=\"text-sm text-gray-600 mt-2\">\r\n                        Phone : <span className=\"\">{e?.receiver_details?.country_code }</span> {e?.receiver_details?.phone}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"mt-4\">\r\n                      <h4 className=\"text-lg font-semibold\">\r\n                        Installment Details{\" \"}\r\n                      </h4>\r\n                      <Table className=\"mt-2\">\r\n                        <TableHeader>\r\n                          <TableRow>\r\n                            <TableHead className=\"w-[100px]\">\r\n                              Installment\r\n                            </TableHead>\r\n                            <TableHead>Amount</TableHead>\r\n                            <TableHead>Due Date</TableHead>\r\n                            <TableHead>Status</TableHead>\r\n                            <TableHead>Pay</TableHead>\r\n                          </TableRow>\r\n                        </TableHeader>\r\n                        <TableBody>\r\n                          {e?.installmentDetails?.map(\r\n                            (installment: any, index: any) => (\r\n                              <TableRow key={index}>\r\n                                <TableCell className=\"font-medium\">\r\n                                  {installment.installment_number}\r\n                                </TableCell>\r\n                                <TableCell>{installment.amount}$</TableCell>\r\n                                {installment?.due_date ? (\r\n                                  <>\r\n                                    {\" \"}\r\n                                    <TableCell>\r\n                                      {new Date(\r\n                                        installment.due_date\r\n                                      ).toLocaleDateString()}\r\n                                    </TableCell>{\" \"}\r\n                                  </>\r\n                                ) : (\r\n                                  <>\r\n                                    {\" \"}\r\n                                    <TableCell>no Due</TableCell>{\" \"}\r\n                                  </>\r\n                                )}\r\n                                <TableCell>{installment.status}</TableCell>\r\n                                <TableCell>\r\n                                  {installment.status === \"paid\" ? \"✔️\" : \"✖️\"}\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            )\r\n                          )}\r\n                        </TableBody>\r\n                        <TableFooter>\r\n                          <TableRow>\r\n                            <TableCell colSpan={4}>Remainig Amount </TableCell>\r\n                            <TableCell className=\"text-right\">\r\n                              ${e?.remaining_amount}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        </TableFooter>\r\n                      </Table>\r\n                    </div>\r\n\r\n                    <h4 className=\"text-lg font-semibold mt-4\">\r\n                      Tracking Details\r\n                    </h4>\r\n\r\n                    <Table className=\"mt-2\">\r\n                      <TableHeader>\r\n                        <TableRow>\r\n                          <TableHead className=\"w-[100px]\">Sno</TableHead>\r\n                          <TableHead>Booked</TableHead>\r\n                          <TableHead>Pickup</TableHead>\r\n                          <TableHead>Transit</TableHead>\r\n                          <TableHead>Delivered</TableHead>\r\n                        </TableRow>\r\n                      </TableHeader>\r\n                      <TableBody>\r\n                        <TableRow>\r\n                          <TableCell className=\"font-medium\">1</TableCell>\r\n                          <TableCell>{e.tracking_status ? \"✔️\" : \"\"}</TableCell>\r\n\r\n                          <TableCell>{p ? \"✔️\" : \"✖️\"}</TableCell>\r\n                          <TableCell>{t ? \"✔️\" : \"✖️\"}</TableCell>\r\n                          <TableCell>{s ? \"✔️\" : \"✖️\"}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                          <TableCell className=\"font-medium\">2</TableCell>\r\n                          <TableCell>\r\n                            {new Date(e?.created_at).toLocaleDateString()}\r\n                          </TableCell>\r\n\r\n                          <TableCell>{p_d}</TableCell>\r\n                          <TableCell>{t_d}</TableCell>\r\n                          <TableCell>{s_d}</TableCell>\r\n                        </TableRow>\r\n                      </TableBody>\r\n                    </Table>\r\n                  </CardContent>\r\n                  <CardFooter className=\"text-right mt-2\">\r\n                    <p className=\"text-xs text-gray-400\">\r\n                      Booked At: {new Date(e?.created_at).toLocaleString()}\r\n                    </p>\r\n                  </CardFooter>\r\n                </Card>\r\n              </>\r\n            );\r\n          }).reverse()}\r\n        </div>\r\n      </div>\r\n           \r\n      :\r\n      <div className=\"my-10\">\r\n        <div className=\"boxes flex justify-center items-center\">\r\n             <h1 className=\"text-4xl\">No Orders Found</h1>\r\n        </div>\r\n      </div> \r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Order_Containe"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1166, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}