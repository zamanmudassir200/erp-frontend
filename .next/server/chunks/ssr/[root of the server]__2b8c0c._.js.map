{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ERP/erp_frontend/src/apiURL.ts"],"sourcesContent":["// export const url = \"https://erp-woad-pi.vercel.app/v1\";\r\nexport const url = \"http://localhost:3000/v1\";\r\n"],"names":[],"mappings":"AAAA,0DAA0D;;;;AACnD,MAAM,MAAM"}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ERP/erp_frontend/src/services/authService.ts"],"sourcesContent":["// /src/services/authService.ts\r\nimport axios from \"axios\";\r\nimport { url } from \"@/apiURL\";\r\nexport const registerClient = async (clientData: any) => {\r\n  try {\r\n    const response = await axios.post(`${url}/client/register`, clientData);\r\n    return response.data;\r\n  } catch (error: any) {\r\n    console.error(\"Error during registration:\", error.response.data || error);\r\n    // throw error; // Rethrow the error so the mutation can catch it\r\n  }\r\n};\r\n// services/authService.ts\r\n// export async function loginClient(credentials: {\r\n//   email: string;\r\n//   password: string;\r\n// }) {\r\n//   const response = await fetch(`${url}/client/login`, {\r\n//     method: \"POST\",\r\n//     headers: {\r\n//       \"Content-Type\": \"application/json\",\r\n//     },\r\n//     body: JSON.stringify(credentials),\r\n//   });\r\n\r\n//   if (!response.ok) {\r\n//     throw new Error(\"Login failed\");\r\n//   }\r\n\r\n//   const data = await response.json();\r\n//   return data; // Assuming 'data' contains the token and other user details\r\n// }\r\n// Client login\r\nexport const loginClient = async (credentials: {\r\n  username: string;\r\n  password: string;\r\n}) => {\r\n  const response = await axios.post(`${url}/client/login`, credentials);\r\n  if (response.status !== 200) throw new Error(\"Login failed\");\r\n  return response.data; // Assuming response contains the token and other user details\r\n};\r\n\r\n// Admin login\r\nexport const loginAdmin = async (credentials: {\r\n  username: string;\r\n  password: string;\r\n}) => {\r\n  const response = await axios.post(`${url}/admin/login`, credentials);\r\n  if (response.status !== 200) throw new Error(\"Login failed\");\r\n  return response.data;\r\n};\r\n\r\n// Employee login\r\nexport const loginEmployee = async (credentials: {\r\n  username: string;\r\n  password: string;\r\n}) => {\r\n  const response = await axios.post(`${url}/employee/login`, credentials);\r\n  if (response.status !== 200) throw new Error(\"Login failed\");\r\n  return response.data;\r\n};\r\n\r\nexport const resetPasswordRequest = async (email: string) => {\r\n  const response = await axios.post(`${url}/client/reset-password`, { email });\r\n  return response.data;\r\n};\r\n\r\nexport const updatePasswordRequest = async (\r\n  token: string,\r\n  newPassword: string\r\n) => {\r\n  const response = await axios.post(`${url}/client/update-password`, {\r\n    token,\r\n    newPassword,\r\n  });\r\n  return response.data;\r\n};\r\n"],"names":[],"mappings":"AAAA,+BAA+B;;;;;;;;;AAE/B;AADA;;;AAEO,MAAM,iBAAiB,OAAO;IACnC,IAAI;QACF,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,6GAAA,CAAA,MAAG,CAAC,gBAAgB,CAAC,EAAE;QAC5D,OAAO,SAAS,IAAI;IACtB,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,8BAA8B,MAAM,QAAQ,CAAC,IAAI,IAAI;IACnE,iEAAiE;IACnE;AACF;AAsBO,MAAM,cAAc,OAAO;IAIhC,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,6GAAA,CAAA,MAAG,CAAC,aAAa,CAAC,EAAE;IACzD,IAAI,SAAS,MAAM,KAAK,KAAK,MAAM,IAAI,MAAM;IAC7C,OAAO,SAAS,IAAI,EAAE,8DAA8D;AACtF;AAGO,MAAM,aAAa,OAAO;IAI/B,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,6GAAA,CAAA,MAAG,CAAC,YAAY,CAAC,EAAE;IACxD,IAAI,SAAS,MAAM,KAAK,KAAK,MAAM,IAAI,MAAM;IAC7C,OAAO,SAAS,IAAI;AACtB;AAGO,MAAM,gBAAgB,OAAO;IAIlC,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,6GAAA,CAAA,MAAG,CAAC,eAAe,CAAC,EAAE;IAC3D,IAAI,SAAS,MAAM,KAAK,KAAK,MAAM,IAAI,MAAM;IAC7C,OAAO,SAAS,IAAI;AACtB;AAEO,MAAM,uBAAuB,OAAO;IACzC,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,6GAAA,CAAA,MAAG,CAAC,sBAAsB,CAAC,EAAE;QAAE;IAAM;IAC1E,OAAO,SAAS,IAAI;AACtB;AAEO,MAAM,wBAAwB,OACnC,OACA;IAEA,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,6GAAA,CAAA,MAAG,CAAC,uBAAuB,CAAC,EAAE;QACjE;QACA;IACF;IACA,OAAO,SAAS,IAAI;AACtB"}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 178, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ERP/erp_frontend/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 188, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 194, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ERP/erp_frontend/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\r\n        outline:\r\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-10 px-4 py-2\",\r\n        sm: \"h-9 rounded-md px-3\",\r\n        lg: \"h-11 rounded-md px-8\",\r\n        icon: \"h-10 w-10\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\"\r\n    return (\r\n      <Comp\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,sMAAM,UAAU,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 248, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ERP/erp_frontend/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,sMAAM,UAAU,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 277, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 283, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ERP/erp_frontend/src/app/login/page.tsx"],"sourcesContent":["\"use client\";\r\nimport { RxEyeClosed } from \"react-icons/rx\";\r\nimport Link from \"next/link\";\r\nimport { useState } from \"react\";\r\nimport useSWRMutation from \"swr/mutation\";\r\nimport { useRouter } from \"next/navigation\"; // For redirection\r\nimport { loginClient, loginAdmin, loginEmployee } from \"@/services/authService\"; // Import login functions\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { toast } from \"react-toastify\"; // Toast notification\r\nimport { TfiEye } from \"react-icons/tfi\";\r\n\r\nexport default function LoginPage() {\r\n  const [formData, setFormData] = useState<{ username: string; password: string }>({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n  const [showPassword, setShowPassword] = useState(false); // Toggle for password visibility\r\n  const [role, setRole] = useState(\"client\"); // Default role\r\n\r\n  const router = useRouter();\r\n\r\n  // Function to handle login based on role\r\n  const loginFunction = async (credentials: { username: string; password: string }) => {\r\n    if (role === \"client\") {\r\n      return loginClient(credentials);\r\n    } else if (role === \"admin\") {\r\n      return loginAdmin(credentials);\r\n    } else if (role === \"employee\") {\r\n      // Fetch employee data (including the role) during login\r\n      const employeeData = await loginEmployee(credentials);\r\n      return employeeData; // This should contain role information, like \"Hr\" in your case\r\n    }\r\n  };\r\n\r\n  // Login mutation\r\n  const {\r\n    trigger: login,\r\n    isMutating: isLoading,\r\n    error,\r\n  } = useSWRMutation('login', async (_, { arg }) => {\r\n    try {\r\n      const data = await loginFunction(arg);\r\n      \r\n      if (data.token) {\r\n        localStorage.setItem(\"token\", data.token); // Store token\r\n      }\r\n      console.log(\"DATA\",data)\r\n      \r\n      // Check if the user is an employee and has a role\r\n      if (role === \"employee\") {\r\n        toast.success(\"Login successful! Redirecting to employee dashboard\");\r\n        router.push(`employee/${data.employee.role.toLowerCase()}/dashboard`); // Redirect based on the employee's role\r\n      \r\n      } else {\r\n        toast.success(\"Login successful! Redirecting to dashboard\");\r\n        router.push(`${role}/dashboard`); // For admin or client login\r\n      }\r\n\r\n      return data;\r\n    } catch (err) {\r\n      toast.error(\"Login failed. Please try again.\");\r\n      throw err; // This will trigger the error handling in SWRMutation\r\n    }\r\n  });\r\n\r\n  // Handle form change\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Handle form submit with validation\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    // Check if username and password are filled\r\n    if (!formData.username || !formData.password) {\r\n      toast.error(\"Please fill out all required fields.\");\r\n      return;\r\n    }\r\n\r\n    // Proceed to login if all fields are filled\r\n    login(formData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center bg-gray-300 justify-center min-h-screen px-5\">\r\n      <div className=\"max-w-lg w-full bg-white p-8 shadow-xl rounded-xl\">\r\n        {/* Tabs section */}\r\n        <div className=\"flex justify-around mb-6\">\r\n          <button\r\n            onClick={() => setRole(\"admin\")}\r\n            className={`py-2 px-4 rounded ${role === \"admin\" ? \"bg-blue-500 text-white\" : \"bg-gray-200\"}`}\r\n          >\r\n            Admin\r\n          </button>\r\n          <button\r\n            onClick={() => setRole(\"client\")}\r\n            className={`py-2 px-4 rounded ${role === \"client\" ? \"bg-blue-500 text-white\" : \"bg-gray-200\"}`}\r\n          >\r\n            Client\r\n          </button>\r\n          <button\r\n            onClick={() => setRole(\"employee\")}\r\n            className={`py-2 px-4 rounded ${role === \"employee\" ? \"bg-blue-500 text-white\" : \"bg-gray-200\"}`}\r\n          >\r\n            Employee\r\n          </button>\r\n        </div>\r\n\r\n        <h1 className=\"text-3xl font-bold mb-4 text-center\">\r\n          Login\r\n        </h1>\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <Input\r\n            name=\"username\"\r\n            type=\"text\"\r\n            placeholder={`Username`}\r\n            value={formData.username}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n\r\n          <div className=\"relative\">\r\n            <Input\r\n              name=\"password\"\r\n              type={showPassword ? \"text\" : \"password\"}\r\n              placeholder=\"Password\"\r\n              value={formData.password}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => setShowPassword(!showPassword)}\r\n              className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\r\n            >\r\n              {showPassword ? <TfiEye /> : <RxEyeClosed />}\r\n            </button>\r\n          </div>\r\n\r\n          <Button type=\"submit\" disabled={isLoading} className=\"w-full\">\r\n            {isLoading ? \"Logging in...\" : \"Login\"}\r\n          </Button>\r\n\r\n          <div className=\"text-end\">\r\n            <Link className=\"text-sm text-blue-600 underline hover:unset\" href=\"/forgotPassword\">\r\n              Forgot Password\r\n            </Link>\r\n          </div>\r\n\r\n\r\n          {role === \"client\" && (\r\n            <p className=\"text-center mt-4\">\r\n              Don't have an account?{\" \"}\r\n              <a href=\"/register\" className=\"text-blue-600 underline hover:text-blue-800\">\r\n                Sign up\r\n              </a>\r\n            </p>\r\n          )}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 537, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}