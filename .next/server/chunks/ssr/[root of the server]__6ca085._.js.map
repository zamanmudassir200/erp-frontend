{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ERP/erp_frontend/src/components/Orders.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/Orders.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Orders.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA6R,GAC1T,2DACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ERP/erp_frontend/src/components/Orders.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/Orders.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Orders.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAyQ,GACtS,uCACA"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ERP/erp_frontend/src/app/employee/sales/dashboard/Navbar.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport {\r\n  Dialog,\r\n  DialogTrigger,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogFooter,\r\n  \r\n} from '@/components/ui/dialog'; // Import shadcn components\r\nimport {Button } from '@/components/ui/button'\r\nconst Navbar = () => {\r\n  const [open, setOpen] = useState(false); // state for dialog\r\n  const router = useRouter();\r\n\r\n  const handleLogout = () => {\r\n    // Remove token (or perform any clean-up action)\r\n    localStorage.removeItem('token'); // Assuming you're using localStorage for token\r\n    router.push('/login'); // Redirect to login page\r\n  };\r\n\r\n  const handleOpenDialog = () => {\r\n    setOpen(true); // Open the confirmation dialog\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpen(false); // Close the confirmation dialog\r\n  };\r\n\r\n  return (\r\n    <nav className=\"flex items-center justify-between p-4 bg-blue-500 text-white\">\r\n      {/* Left side: Logo */}\r\n      <div className=\"text-lg font-bold\">\r\n        <img src=\"/logo.png\" alt=\"Logo\" className=\"h-10 w-10\" /> {/* Replace with your logo */}\r\n      </div>\r\n\r\n      {/* Middle: Navigation Links */}\r\n      <ul className=\"flex space-x-6\">\r\n        <li>\r\n          <a href=\"/\" className=\"hover:underline\">\r\n            Home\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a href=\"/about\" className=\"hover:underline\">\r\n            About\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a href=\"/services\" className=\"hover:underline\">\r\n            Services\r\n          </a>\r\n        </li>\r\n      </ul>\r\n\r\n      {/* Right side: Logout Button */}\r\n      <div>\r\n        <Button\r\n          onClick={handleOpenDialog}\r\n          className=\"bg-red-600 px-4 py-2 rounded hover:bg-red-700\"\r\n        >\r\n          Logout\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Dialog box for confirmation using shadcn/ui */}\r\n      <Dialog open={open} onOpenChange={setOpen}>\r\n        <DialogTrigger asChild>\r\n          {/* This can be your logout button, but since you are manually controlling the dialog, you can remove this */}\r\n        </DialogTrigger>\r\n        <DialogContent>\r\n          <DialogHeader>\r\n            <DialogTitle>Confirm Logout</DialogTitle>\r\n          </DialogHeader>\r\n          <p>Are you sure you want to log out?</p>\r\n          <DialogFooter>\r\n            <Button variant=\"outline\" onClick={handleCloseDialog}>\r\n              No\r\n            </Button>\r\n            <Button\r\n              variant=\"destructive\"\r\n              onClick={handleLogout}\r\n            >\r\n              Yes\r\n            </Button>\r\n          </DialogFooter>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA,gOAQiC,2BAA2B;AAC5D;AAVA;;;;;;AAWA,MAAM,SAAS;IACb,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ,mBAAmB;IAC5D,MAAM,SAAS,CAAA,GAAA,qLAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,eAAe;QACnB,gDAAgD;QAChD,aAAa,UAAU,CAAC,UAAU,+CAA+C;QACjF,OAAO,IAAI,CAAC,WAAW,yBAAyB;IAClD;IAEA,MAAM,mBAAmB;QACvB,QAAQ,OAAO,+BAA+B;IAChD;IAEA,MAAM,oBAAoB;QACxB,QAAQ,QAAQ,gCAAgC;IAClD;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,KAAI;wBAAY,KAAI;wBAAO,WAAU;;;;;;oBAAc;;;;;;;0BAI1D,8OAAC;gBAAG,WAAU;;kCACZ,8OAAC;kCACC,cAAA,8OAAC;4BAAE,MAAK;4BAAI,WAAU;sCAAkB;;;;;;;;;;;kCAI1C,8OAAC;kCACC,cAAA,8OAAC;4BAAE,MAAK;4BAAS,WAAU;sCAAkB;;;;;;;;;;;kCAI/C,8OAAC;kCACC,cAAA,8OAAC;4BAAE,MAAK;4BAAY,WAAU;sCAAkB;;;;;;;;;;;;;;;;;0BAOpD,8OAAC;0BACC,cAAA,8OAAC,kIAAA,CAAA,SAAM;oBACL,SAAS;oBACT,WAAU;8BACX;;;;;;;;;;;0BAMH,8OAAC,kIAAA,CAAA,SAAM;gBAAC,MAAM;gBAAM,cAAc;;kCAChC,8OAAC,kIAAA,CAAA,gBAAa;wBAAC,OAAO;;;;;;kCAGtB,8OAAC,kIAAA,CAAA,gBAAa;;0CACZ,8OAAC,kIAAA,CAAA,eAAY;0CACX,cAAA,8OAAC,kIAAA,CAAA,cAAW;8CAAC;;;;;;;;;;;0CAEf,8OAAC;0CAAE;;;;;;0CACH,8OAAC,kIAAA,CAAA,eAAY;;kDACX,8OAAC,kIAAA,CAAA,SAAM;wCAAC,SAAQ;wCAAU,SAAS;kDAAmB;;;;;;kDAGtD,8OAAC,kIAAA,CAAA,SAAM;wCACL,SAAQ;wCACR,SAAS;kDACV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQb;uCAEe"}},
    {"offset": {"line": 267, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 273, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ERP/erp_frontend/src/app/employee/sales/dashboard/page.tsx"],"sourcesContent":["import React from 'react'\r\nimport Orders from '@/components/Orders'\r\nimport Navbar from './Navbar'\r\nconst page = () => {\r\n  return (\r\n    <div>\r\n<Navbar/>\r\n    <Orders/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default page"],"names":[],"mappings":";;;;AACA;AACA;;;;AACA,MAAM,OAAO;IACX,qBACE,8OAAC;;0BACL,8OAAC,uJAAA,CAAA,UAAM;;;;;0BACH,8OAAC,4HAAA,CAAA,UAAM;;;;;;;;;;;AAGX;uCAEe"}},
    {"offset": {"line": 303, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 314, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 314, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}